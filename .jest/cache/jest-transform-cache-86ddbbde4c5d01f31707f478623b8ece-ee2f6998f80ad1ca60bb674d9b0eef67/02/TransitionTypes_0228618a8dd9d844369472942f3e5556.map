{"version":3,"sources":["TransitionTypes.js"],"names":["transitionTypes","initTransitionTypes","registerTransitionType","getScaleTransition","getTopTransition","getBottomTransition","getLeftTransition","getRightTransition","getHorizontalTransition","getVerticalTransition","getFlipTransition","name","transitionFunction","push","getTransitionType","transitionType","find","e"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA,IAAMA,eAAuC,GAAG,EAAhD;;AAEO,SAASC,mBAAT,GAA+B;AACpCC,EAAAA,sBAAsB,CAAC,OAAD,EAAUC,uCAAV,CAAtB;AACAD,EAAAA,sBAAsB,CAAC,KAAD,EAAQE,kCAAR,CAAtB;AACAF,EAAAA,sBAAsB,CAAC,QAAD,EAAWG,wCAAX,CAAtB;AACAH,EAAAA,sBAAsB,CAAC,MAAD,EAASI,oCAAT,CAAtB;AACAJ,EAAAA,sBAAsB,CAAC,OAAD,EAAUK,sCAAV,CAAtB;AACAL,EAAAA,sBAAsB,CAAC,YAAD,EAAeM,gDAAf,CAAtB;AACAN,EAAAA,sBAAsB,CAAC,UAAD,EAAaO,4CAAb,CAAtB;AACAP,EAAAA,sBAAsB,CAAC,MAAD,EAASQ,oCAAT,CAAtB;AACAR,EAAAA,sBAAsB,CAAC,MAAD,EAAS;AAAA,WAAO,EAAP;AAAA,GAAT,CAAtB;AACD;;AAEM,SAASA,sBAAT,CAAgCS,IAAhC,EACLC,kBADK,EAC0C;AAC/CZ,EAAAA,eAAe,CAACa,IAAhB,CAAqB;AAAEF,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,kBAAkB,EAAlBA;AAAR,GAArB;AACD;;AAEM,SAASE,iBAAT,CAA2BH,IAA3B,EAAmD;AACxD,MAAMI,cAAc,GAAGf,eAAe,CAACgB,IAAhB,CAAqB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACN,IAAF,KAAWA,IAAf;AAAA,GAAtB,CAAvB;AACA,MAAII,cAAJ,EAAoB,OAAOA,cAAc,CAACH,kBAAtB;AACpB,SAAO,IAAP;AACD","sourcesContent":["import { getScaleTransition } from './getScaleTransitions';\nimport { getTopTransition } from './getTopTransition';\nimport { getBottomTransition } from './getBottomTransition';\nimport { getLeftTransition } from './getLeftTransition';\nimport { getRightTransition } from './getRightTransition';\nimport { getHorizontalTransition } from './getHorizontalTransition';\nimport { getVerticalTransition } from './getVerticalTransition';\nimport { getFlipTransition } from './getFlipTransition';\n\ntype TransitionEntry = {\n  name: string,\n  transitionFunction: Function\n}\n\nconst transitionTypes: Array<TransitionEntry> = [];\n\nexport function initTransitionTypes() {\n  registerTransitionType('scale', getScaleTransition);\n  registerTransitionType('top', getTopTransition);\n  registerTransitionType('bottom', getBottomTransition);\n  registerTransitionType('left', getLeftTransition);\n  registerTransitionType('right', getRightTransition);\n  registerTransitionType('horizontal', getHorizontalTransition);\n  registerTransitionType('vertical', getVerticalTransition);\n  registerTransitionType('flip', getFlipTransition);\n  registerTransitionType('none', () => ({}));\n}\n\nexport function registerTransitionType(name: string,\n  transitionFunction: Function): TransitionEntry {\n  transitionTypes.push({ name, transitionFunction });\n}\n\nexport function getTransitionType(name: string): Function {\n  const transitionType = transitionTypes.find(e => e.name === name);\n  if (transitionType) return transitionType.transitionFunction;\n  return null;\n}\n"]}