{"version":3,"sources":["getRightTransition.js"],"names":["getRightTransition","transitionSpecification","metrics","undefined","start","end","boundingbox","dimensions","x","distanceValue","width","startValue","endValue","direction","RouteDirection","to","progress","interpolate","inputRange","outputRange","transform","translateX"],"mappings":";;;;;AAAA;;AAEO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,uBAAD,EAAsD;AACtF,MAAI,CAACA,uBAAD,IAA4BA,uBAAuB,CAACC,OAAxB,KAAoCC,SAApE,EAA+E;AAAE,WAAO,EAAP;AAAa;;AADR,MAG9EC,KAH8E,GAGtCH,uBAHsC,CAG9EG,KAH8E;AAAA,MAGvEC,GAHuE,GAGtCJ,uBAHsC,CAGvEI,GAHuE;AAAA,MAGlEC,WAHkE,GAGtCL,uBAHsC,CAGlEK,WAHkE;AAAA,MAGrDC,UAHqD,GAGtCN,uBAHsC,CAGrDM,UAHqD;AAAA,MAI9EC,CAJ8E,GAIxEF,WAJwE,CAI9EE,CAJ8E;AAMtF,MAAMC,aAAa,GAAGF,UAAU,CAACG,KAAX,IAAoBF,CAAC,GAAG,EAAxB,CAAtB;AACA,MAAIG,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAGH,aAAf;;AAEA,MAAIR,uBAAuB,CAACY,SAAxB,KAAsCC,sBAAeC,EAAzD,EAA6D;AAC3DJ,IAAAA,UAAU,GAAGF,aAAb;AACAG,IAAAA,QAAQ,GAAG,CAAX;AACD;;AAED,MAAMI,QAAQ,GAAGf,uBAAuB,CAACe,QAAxB,CAAiCC,WAAjC,CAA6C;AAC5DC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAId,KAAJ,EAAWC,GAAX,EAAgB,CAAhB,CADgD;AAE5Dc,IAAAA,WAAW,EAAE,CAACR,UAAD,EAAaA,UAAb,EAAyBC,QAAzB,EAAmCA,QAAnC;AAF+C,GAA7C,CAAjB;AAKA,SAAO;AACLQ,IAAAA,SAAS,EAAE,CAAC;AACVC,MAAAA,UAAU,EAAEL;AADF,KAAD;AADN,GAAP;AAKD,CAzBM","sourcesContent":["import { RouteDirection, TransitionSpecification } from '../Types';\n\nexport const getRightTransition = (transitionSpecification: TransitionSpecification) => {\n  if (!transitionSpecification || transitionSpecification.metrics === undefined) { returnÂ { }; }\n\n  const { start, end, boundingbox, dimensions } = transitionSpecification;\n  const { x } = boundingbox;\n\n  const distanceValue = dimensions.width - (x - 25);\n  let startValue = 0;\n  let endValue = distanceValue;\n\n  if (transitionSpecification.direction === RouteDirection.to) {\n    startValue = distanceValue;\n    endValue = 0;\n  }\n\n  const progress = transitionSpecification.progress.interpolate({\n    inputRange: [0, start, end, 1],\n    outputRange: [startValue, startValue, endValue, endValue],\n  });\n\n  return {\n    transform: [{\n      translateX: progress,\n    }],\n  };\n};\n"]}