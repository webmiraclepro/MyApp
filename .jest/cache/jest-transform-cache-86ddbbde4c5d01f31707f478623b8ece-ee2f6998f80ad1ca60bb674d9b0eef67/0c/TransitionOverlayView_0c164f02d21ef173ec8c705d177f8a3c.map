{"version":3,"sources":["TransitionOverlayView.js"],"names":["TransitionOverlayView","props","context","_isMounted","getInterpolation","bind","fromRoute","toRoute","transitionElements","sharedElements","from","to","filter","i","inline","route","p","fromItem","toItem","transitionContext","getTransitionContext","getMetricsReady","length","styles","overlay","_interpolation","_nativeInterpolation","transitionViews","sharedElementViews","anchoredViews","views","getVisibilityStyle","getTransitionProgress","index","progress","opacity","inputRange","Constants","OP","outputRange","visibility","interpolate","metricsReady","forEach","item","metrics","pair","anchors","n","useNativeDriver","getIndex","getDirectionForRoute","getDirection","getRoutes","delayCountFrom","name","RouteDirection","reduce","prevValue","delay","delayCountTo","navDirection","delayIndexFrom","delayIndexTo","Math","max","delayFromFactor","delayToFactor","React","Component","contextTypes","PropTypes","func","StyleSheet","create","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash.sortby';\n\nimport TransitionItem from './TransitionItem';\nimport { TransitionContext, RouteDirection } from './Types';\nimport * as Constants from './TransitionConstants';\n\nimport { initTransitionTypes, getTransitionElements } from './Transitions';\nimport { initInterpolatorTypes, getSharedElements, getAnchoredElements } from './Interpolators';\nimport { compareSharedElements, compareTransitionElements } from './Utils/utilities';\n\ninitTransitionTypes();\ninitInterpolatorTypes();\n\ntype Props = {\n  fromRoute: string,\n  toRoute: string,\n  visibility: Animated.Value,\n  direction: number,\n  index: number,\n  sharedElements: Array<any>,\n  transitionElements: Array<TransitionItem>\n}\n\nclass TransitionOverlayView extends React.Component<Props> {\n  constructor(props: Props, context) {\n    super(props, context);\n    this._isMounted = false;\n    this.getInterpolation = this.getInterpolation.bind(this);\n  }\n\n  _isMounted: boolean;\n\n  _nativeInterpolation: any;\n\n  _interpolation: any;\n\n  /* shouldComponentUpdate(nextProps: Props) {\n    const { direction, fromRoute, toRoute, index, sharedElements, transitionElements } = this.props;\n    const seDiffers = !compareSharedElements(sharedElements, nextProps.sharedElements);\n    const teDiffers = !compareTransitionElements(transitionElements, nextProps.transitionElements);\n    if (direction !== nextProps.direction\n      || index !== nextProps.index\n      || fromRoute !== nextProps.fromRoute\n      || toRoute !== nextProps.toRoute\n      || seDiffers || teDiffers) {\n      return true;\n    }\n    return false;\n  }*/\n\n  render() {\n    const { fromRoute, toRoute } = this.props;\n    let { transitionElements, sharedElements } = this.props;\n    const from = fromRoute;\n    const to = toRoute;\n    transitionElements = transitionElements ? transitionElements\n      .filter(i => !i.inline && (i.route === from || i.route === to)) : [];\n\n    sharedElements = sharedElements ? sharedElements\n      .filter(p => (p.fromItem.route === from || p.fromItem.route === to)\n        && (p.toItem.route === from || p.toItem.route === to)) : [];\n\n    const transitionContext = this.getTransitionContext(transitionElements);\n    if (!transitionContext || !this.getMetricsReady()\n      || (sharedElements.length === 0 && transitionElements.length === 0)) {\n      return <View style={styles.overlay} pointerEvents=\"none\" />;\n    }\n\n    this._interpolation = null;\n    this._nativeInterpolation = null;\n\n    const transitionViews = getTransitionElements(transitionElements, transitionContext);\n    const sharedElementViews = getSharedElements(sharedElements, this.getInterpolation);\n    const anchoredViews = getAnchoredElements(sharedElements, this.getInterpolation);\n\n    let views = [...transitionViews, ...sharedElementViews, ...anchoredViews];\n    views = sortBy(views, 'props.index');\n\n    return (\n      <Animated.View\n        style={[\n          styles.overlay,\n          this.getVisibilityStyle(),\n        ]}\n        pointerEvents=\"none\"\n      >\n        {views}\n      </Animated.View>\n    );\n  }\n\n  getVisibilityStyle() {\n    const { getTransitionProgress } = this.context;\n    const { index } = this.props;\n\n    if (!getTransitionProgress) return {};\n    const progress = getTransitionProgress();\n    if (!progress) return { opacity: 0 };\n\n    const inputRange = [index - 1, (index - 1) + Constants.OP, index - Constants.OP, index];\n    const outputRange = [0, 1, 1, 0];\n    const visibility = progress.interpolate({ inputRange, outputRange });\n\n    return { opacity: visibility };\n  }\n\n  getMetricsReady(): boolean {\n    let metricsReady = true;\n    const { transitionElements, sharedElements } = this.props;\n    if (transitionElements) {\n      transitionElements.forEach(item => {\n        if (!item.metrics) {\n          metricsReady = false;\n        }\n      });\n    }\n\n    if (sharedElements) {\n      sharedElements.forEach(pair => {\n        if (!pair.toItem.metrics || !pair.fromItem.metrics) {\n          metricsReady = false;\n        }\n        if (pair.fromItem && pair.fromItem.anchors) {\n          for (let n = 0; n < pair.fromItem.anchors.length; n++) {\n            if (!pair.fromItem.anchors[n].metrics) {\n              metricsReady = false;\n              break;\n            }\n          }\n        }\n        if (pair.toItem && pair.toItem.anchors) {\n          for (let n = 0; n < pair.toItem.anchors.length; n++) {\n            if (!pair.toItem.anchors[n].metrics) {\n              metricsReady = false;\n              break;\n            }\n          }\n        }\n      });\n    }\n    return metricsReady;\n  }\n\n  getInterpolation(useNativeDriver: boolean) {\n    const { getTransitionProgress, getIndex } = this.context;\n    if (!getTransitionProgress || !getIndex) return null;\n\n    const index = getIndex();\n    const inputRange = [index - 1, index, index + 1];\n\n    if (useNativeDriver && !this._nativeInterpolation) {\n      this._nativeInterpolation = getTransitionProgress(true).interpolate({\n        inputRange, outputRange: [0, 1, 0],\n      });\n    } else if (!useNativeDriver && !this._interpolation) {\n      this._interpolation = getTransitionProgress(false).interpolate({\n        inputRange, outputRange: [0, 1, 0],\n      });\n    }\n\n    if (useNativeDriver) return this._nativeInterpolation;\n    return this._interpolation;\n  }\n\n  getTransitionContext(transitionElements): TransitionContext {\n    const { getDirectionForRoute, getIndex, getDirection,\n      getRoutes, getTransitionProgress } = this.context;\n\n    if (!transitionElements || !getDirectionForRoute || !getDirection\n      || !getRoutes || !getIndex || !getTransitionProgress) {\n      return null;\n    }\n\n    const delayCountFrom = transitionElements\n      .filter(item => getDirectionForRoute(item.name, item.route) === RouteDirection.from)\n      .reduce((prevValue, item) => (item.delay ? prevValue + 1 : prevValue), 0);\n\n    const delayCountTo = transitionElements\n      .filter(item => getDirectionForRoute(item.name, item.route) === RouteDirection.to)\n      .reduce((prevValue, item) => (item.delay ? prevValue + 1 : prevValue), 0);\n\n    const navDirection = getDirection();\n    const delayIndexFrom = 0;\n    const delayIndexTo = Math.max(0, delayCountTo - 1);\n    const delayFromFactor = 1;\n    const delayToFactor = -1;\n\n    return {\n      delayCountFrom,\n      delayCountTo,\n      navDirection,\n      delayIndexFrom,\n      delayIndexTo,\n      delayToFactor,\n      delayFromFactor,\n      getDirectionForRoute,\n      getIndex,\n      getTransitionProgress,\n      getRoutes,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  static contextTypes = {\n    getTransitionProgress: PropTypes.func,\n    getDirectionForRoute: PropTypes.func,\n    getDirection: PropTypes.func,\n    getIndex: PropTypes.func,\n    getRoutes: PropTypes.func,\n  }\n}\n\nconst styles: StyleSheet.Styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    // backgroundColor: '#FF00AE11',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\nexport default TransitionOverlayView;\n"]}