{"version":3,"sources":["StackViewStyleInterpolator.tsx"],"names":["EPS","navigation","scene","props","focused","opacity","translate","transform","translateX","translateY","layout","position","forInitial","interpolate","first","last","index","width","inputRange","outputRange","I18nManager","extrapolate","shadowOpacity","overlayOpacity","height","maxTranslation","forHorizontal","forVertical","forFadeFromBottomAndroid","forFadeToBottomAndroid","forFade","forNoAnimation"],"mappings":"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","sourcesContent":["import { I18nManager } from 'react-native';\nimport getSceneIndicesForInterpolationInputRange from '../../utils/getSceneIndicesForInterpolationInputRange';\nimport { SceneInterpolatorProps } from '../../types';\n\nconst EPS = 1e-5;\n\n/**\n * Utility that builds the style for the card in the cards stack.\n *\n *     +------------+\n *   +-+            |\n * +-+ |            |\n * | | |            |\n * | | |  Focused   |\n * | | |   Card     |\n * | | |            |\n * +-+ |            |\n *   +-+            |\n *     +------------+\n */\n\n/**\n * Render the initial style when the initial layout isn't measured yet.\n */\nfunction forInitial(props: SceneInterpolatorProps) {\n  const { navigation, scene } = props;\n\n  const focused = navigation.state.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene far away.\n  const translate = focused ? 0 : 1000000;\n  return {\n    opacity,\n    transform: [{ translateX: translate }, { translateY: translate }],\n  };\n}\n\n/**\n * Standard iOS-style slide in from the right.\n */\nfunction forHorizontal(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  const width = layout.initWidth;\n  const translateX = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: I18nManager.isRTL\n      ? [-width, 0, width * 0.3]\n      : [width, 0, width * -0.3],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = props.shadowEnabled\n    ? position.interpolate({\n        inputRange: [first, index, last],\n        outputRange: [0, 0.7, 0],\n        extrapolate: 'clamp',\n      })\n    : null;\n\n  let overlayOpacity = props.cardOverlayEnabled\n    ? position.interpolate({\n        inputRange: [index, last - 0.5, last, last + EPS],\n        outputRange: [0, 0.07, 0.07, 0],\n        extrapolate: 'clamp',\n      })\n    : null;\n\n  return {\n    transform: [{ translateX }],\n    overlayOpacity,\n    shadowOpacity,\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nfunction forVertical(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const height = layout.initHeight;\n  const translateY = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [height, 0, 0],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    transform: [{ translateY }],\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom.\n */\nfunction forFadeFromBottomAndroid(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: [first, first + 0.5, first + 0.9, index, last - 1e-5, last],\n    outputRange: [0, 0.25, 0.7, 1, 1, 0],\n    extrapolate: 'clamp',\n  });\n\n  const height = layout.initHeight;\n  const maxTranslation = height * 0.08;\n  const translateY = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [maxTranslation, 0, 0],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    opacity,\n    transform: [{ translateY }],\n  };\n}\n\nfunction forFadeToBottomAndroid(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const inputRange = [first, index, last];\n\n  const opacity = position.interpolate({\n    inputRange,\n    outputRange: [0, 1, 1],\n    extrapolate: 'clamp',\n  });\n\n  const height = layout.initHeight;\n  const maxTranslation = height * 0.08;\n\n  const translateY = position.interpolate({\n    inputRange,\n    outputRange: [maxTranslation, 0, 0],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    opacity,\n    transform: [{ translateY }],\n  };\n}\n\n/**\n *  fadeIn and fadeOut\n */\nfunction forFade(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [0, 1, 1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    opacity,\n  };\n}\n\nfunction forNoAnimation() {\n  return {};\n}\n\nexport default {\n  forHorizontal,\n  forVertical,\n  forFadeFromBottomAndroid,\n  forFadeToBottomAndroid,\n  forFade,\n  forNoAnimation,\n};\n"]}