1873ce7e2d4f3aee67e242c1a5cda083
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _invariant = _interopRequireDefault(require("../utils/invariant"));

var _jsxFileName = "/Users/brentvatne/coding/react-navigation-core/src/navigators/createNavigator.js";

function createNavigator(NavigatorView, router, navigationConfig) {
  var Navigator = function (_React$Component) {
    (0, _inherits2.default)(Navigator, _React$Component);

    function Navigator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Navigator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Navigator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        descriptors: {},
        screenProps: _this.props.screenProps
      };
      return _this;
    }

    (0, _createClass2.default)(Navigator, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(NavigatorView, (0, _extends2.default)({}, this.props, {
          screenProps: this.state.screenProps,
          navigation: this.props.navigation,
          navigationConfig: navigationConfig,
          descriptors: this.state.descriptors,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61
          }
        }));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var prevDescriptors = prevState.descriptors;
        var navigation = nextProps.navigation,
            screenProps = nextProps.screenProps;
        (0, _invariant.default)(navigation != null, 'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html');
        var state = navigation.state;
        var routes = state.routes;

        if (typeof routes === 'undefined') {
          throw new TypeError('No "routes" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop');
        }

        var descriptors = {};
        routes.forEach(function (route) {
          if (prevDescriptors && prevDescriptors[route.key] && route === prevDescriptors[route.key].state && screenProps === prevState.screenProps) {
            descriptors[route.key] = prevDescriptors[route.key];
            return;
          }

          var getComponent = router.getComponentForRouteName.bind(null, route.routeName);
          var childNavigation = navigation.getChildNavigation(route.key);
          var options = router.getScreenOptions(childNavigation, screenProps);
          descriptors[route.key] = {
            key: route.key,
            getComponent: getComponent,
            options: options,
            state: route,
            navigation: childNavigation
          };
        });
        return {
          descriptors: descriptors,
          screenProps: screenProps
        };
      }
    }]);
    return Navigator;
  }(_react.default.Component);

  Navigator.router = router;
  Navigator.navigationOptions = navigationConfig.navigationOptions;
  return Navigator;
}

var _default = createNavigator;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZU5hdmlnYXRvci5qcyJdLCJuYW1lcyI6WyJOYXZpZ2F0b3IiLCJSZWFjdCIsIm5hdmlnYXRpb25Db25maWciLCJkZXNjcmlwdG9ycyIsInNjcmVlblByb3BzIiwicHJldkRlc2NyaXB0b3JzIiwicHJldlN0YXRlIiwibmF2aWdhdGlvbiIsIm5leHRQcm9wcyIsInN0YXRlIiwicm91dGVzIiwicm91dGUiLCJnZXRDb21wb25lbnQiLCJyb3V0ZXIiLCJjaGlsZE5hdmlnYXRpb24iLCJvcHRpb25zIiwia2V5IiwiY3JlYXRlTmF2aWdhdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxVQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBOzs7O0FBRUEsU0FBQSxlQUFBLENBQUEsYUFBQSxFQUFBLE1BQUEsRUFBQSxnQkFBQSxFQUFrRTtBQUFBLE1BQzFEQSxTQUQwRCxHQUFBLFVBQUEsZ0JBQUEsRUFBQTtBQUFBLEtBQUEsR0FBQSxVQUFBLENBQUEsT0FBQSxFQUFBLFNBQUEsRUFBQSxnQkFBQTs7QUFBQSxhQUFBLFNBQUEsR0FBQTtBQUFBLFVBQUEsZ0JBQUE7O0FBQUEsVUFBQSxLQUFBOztBQUFBLE9BQUEsR0FBQSxnQkFBQSxDQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsU0FBQTs7QUFBQSxXQUFBLElBQUEsSUFBQSxHQUFBLFNBQUEsQ0FBQSxNQUFBLEVBQUEsSUFBQSxHQUFBLElBQUEsS0FBQSxDQUFBLElBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxDQUFBLEVBQUEsSUFBQSxHQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsRUFBQTtBQUFBLFFBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxHQUFBLFNBQUEsQ0FBQSxJQUFBLENBQUE7QUFBQTs7QUFBQSxNQUFBLEtBQUEsR0FBQSxDQUFB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QUNBVixVQUFBQSxXQUFXLENBQUNRLEtBQUssQ0FBakJSLEdBQVcsQ0FBWEEsR0FBeUI7QUFDdkJhLFlBQUFBLEdBQUcsRUFBRUwsS0FBSyxDQURhLEdBQUE7QUFFdkJDLFlBQUFBLFlBQVksRUFGVyxZQUFBO0FBR3ZCRyxZQUFBQSxPQUFPLEVBSGdCLE9BQUE7QUFJdkJOLFlBQUFBLEtBQUssRUFKa0IsS0FBQTtBQUt2QkYsWUFBQUEsVUFBVSxFQUxaSjtBQUF5QixXQUF6QkE7QUFoQkZPLFNBQUFBO0FBeUJBLGVBQU87QUFBRVAsVUFBQUEsV0FBVyxFQUFiLFdBQUE7QUFBZUMsVUFBQUEsV0FBVyxFQUFqQztBQUFPLFNBQVA7QUFwRDREO0FBQUEsS0FBQSxDQUFBO0FBQUEsV0FBQSxTQUFBO0FBQUEsR0FBQSxDQUN4Q0gsTUFBQUEsQ0FBQUEsT0FBQUEsQ0FEd0MsU0FBQSxDQUFBOztBQUMxREQsRUFBQUEsU0FEMEQsQ0FBQSxNQUMxREEsR0FEMEQsTUFDMURBO0FBQUFBLEVBQUFBLFNBRDBELENBQUEsaUJBQzFEQSxHQUV1QkUsZ0JBQWdCLENBSG1CLGlCQUMxREY7QUFtRU4sU0FBQSxTQUFBOzs7ZUFHYWlCLGUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICcuLi91dGlscy9pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBjcmVhdGVOYXZpZ2F0b3IoTmF2aWdhdG9yVmlldywgcm91dGVyLCBuYXZpZ2F0aW9uQ29uZmlnKSB7XG4gIGNsYXNzIE5hdmlnYXRvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIHJvdXRlciA9IHJvdXRlcjtcbiAgICBzdGF0aWMgbmF2aWdhdGlvbk9wdGlvbnMgPSBuYXZpZ2F0aW9uQ29uZmlnLm5hdmlnYXRpb25PcHRpb25zO1xuXG4gICAgc3RhdGUgPSB7XG4gICAgICBkZXNjcmlwdG9yczoge30sXG4gICAgICBzY3JlZW5Qcm9wczogdGhpcy5wcm9wcy5zY3JlZW5Qcm9wcyxcbiAgICB9O1xuXG4gICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgICAgY29uc3QgcHJldkRlc2NyaXB0b3JzID0gcHJldlN0YXRlLmRlc2NyaXB0b3JzO1xuICAgICAgY29uc3QgeyBuYXZpZ2F0aW9uLCBzY3JlZW5Qcm9wcyB9ID0gbmV4dFByb3BzO1xuICAgICAgaW52YXJpYW50KFxuICAgICAgICBuYXZpZ2F0aW9uICE9IG51bGwsXG4gICAgICAgICdUaGUgbmF2aWdhdGlvbiBwcm9wIGlzIG1pc3NpbmcgZm9yIHRoaXMgbmF2aWdhdG9yLiBJbiByZWFjdC1uYXZpZ2F0aW9uIDMgeW91IG11c3Qgc2V0IHVwIHlvdXIgYXBwIGNvbnRhaW5lciBkaXJlY3RseS4gTW9yZSBpbmZvOiBodHRwczovL3JlYWN0bmF2aWdhdGlvbi5vcmcvZG9jcy9lbi9hcHAtY29udGFpbmVycy5odG1sJ1xuICAgICAgKTtcbiAgICAgIGNvbnN0IHsgc3RhdGUgfSA9IG5hdmlnYXRpb247XG4gICAgICBjb25zdCB7IHJvdXRlcyB9ID0gc3RhdGU7XG4gICAgICBpZiAodHlwZW9mIHJvdXRlcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICAnTm8gXCJyb3V0ZXNcIiBmb3VuZCBpbiBuYXZpZ2F0aW9uIHN0YXRlLiBEaWQgeW91IHRyeSB0byBwYXNzIHRoZSBuYXZpZ2F0aW9uIHByb3Agb2YgYSBSZWFjdCBjb21wb25lbnQgdG8gYSBOYXZpZ2F0b3IgY2hpbGQ/IFNlZSBodHRwczovL3JlYWN0bmF2aWdhdGlvbi5vcmcvZG9jcy9lbi9jdXN0b20tbmF2aWdhdG9ycy5odG1sI25hdmlnYXRvci1uYXZpZ2F0aW9uLXByb3AnXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRlc2NyaXB0b3JzID0ge307XG5cbiAgICAgIHJvdXRlcy5mb3JFYWNoKHJvdXRlID0+IHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIHByZXZEZXNjcmlwdG9ycyAmJlxuICAgICAgICAgIHByZXZEZXNjcmlwdG9yc1tyb3V0ZS5rZXldICYmXG4gICAgICAgICAgcm91dGUgPT09IHByZXZEZXNjcmlwdG9yc1tyb3V0ZS5rZXldLnN0YXRlICYmXG4gICAgICAgICAgc2NyZWVuUHJvcHMgPT09IHByZXZTdGF0ZS5zY3JlZW5Qcm9wc1xuICAgICAgICApIHtcbiAgICAgICAgICBkZXNjcmlwdG9yc1tyb3V0ZS5rZXldID0gcHJldkRlc2NyaXB0b3JzW3JvdXRlLmtleV07XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGdldENvbXBvbmVudCA9IHJvdXRlci5nZXRDb21wb25lbnRGb3JSb3V0ZU5hbWUuYmluZChcbiAgICAgICAgICBudWxsLFxuICAgICAgICAgIHJvdXRlLnJvdXRlTmFtZVxuICAgICAgICApO1xuICAgICAgICBjb25zdCBjaGlsZE5hdmlnYXRpb24gPSBuYXZpZ2F0aW9uLmdldENoaWxkTmF2aWdhdGlvbihyb3V0ZS5rZXkpO1xuICAgICAgICBjb25zdCBvcHRpb25zID0gcm91dGVyLmdldFNjcmVlbk9wdGlvbnMoY2hpbGROYXZpZ2F0aW9uLCBzY3JlZW5Qcm9wcyk7XG4gICAgICAgIGRlc2NyaXB0b3JzW3JvdXRlLmtleV0gPSB7XG4gICAgICAgICAga2V5OiByb3V0ZS5rZXksXG4gICAgICAgICAgZ2V0Q29tcG9uZW50LFxuICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgc3RhdGU6IHJvdXRlLFxuICAgICAgICAgIG5hdmlnYXRpb246IGNoaWxkTmF2aWdhdGlvbixcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4geyBkZXNjcmlwdG9ycywgc2NyZWVuUHJvcHMgfTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8TmF2aWdhdG9yVmlld1xuICAgICAgICAgIHsuLi50aGlzLnByb3BzfVxuICAgICAgICAgIHNjcmVlblByb3BzPXt0aGlzLnN0YXRlLnNjcmVlblByb3BzfVxuICAgICAgICAgIG5hdmlnYXRpb249e3RoaXMucHJvcHMubmF2aWdhdGlvbn1cbiAgICAgICAgICBuYXZpZ2F0aW9uQ29uZmlnPXtuYXZpZ2F0aW9uQ29uZmlnfVxuICAgICAgICAgIGRlc2NyaXB0b3JzPXt0aGlzLnN0YXRlLmRlc2NyaXB0b3JzfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gTmF2aWdhdG9yO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVOYXZpZ2F0b3I7XG4iXX0=