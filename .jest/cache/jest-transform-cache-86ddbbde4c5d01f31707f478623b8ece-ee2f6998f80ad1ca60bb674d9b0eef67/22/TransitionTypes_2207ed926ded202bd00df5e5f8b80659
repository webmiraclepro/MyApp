1cf1f61dc6492986098a23d8a0298103
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.initTransitionTypes = initTransitionTypes;exports.registerTransitionType = registerTransitionType;exports.getTransitionType = getTransitionType;var _getScaleTransitions = require("./getScaleTransitions");
var _getTopTransition = require("./getTopTransition");
var _getBottomTransition = require("./getBottomTransition");
var _getLeftTransition = require("./getLeftTransition");
var _getRightTransition = require("./getRightTransition");
var _getHorizontalTransition = require("./getHorizontalTransition");
var _getVerticalTransition = require("./getVerticalTransition");
var _getFlipTransition = require("./getFlipTransition");






var transitionTypes = [];

function initTransitionTypes() {
  registerTransitionType('scale', _getScaleTransitions.getScaleTransition);
  registerTransitionType('top', _getTopTransition.getTopTransition);
  registerTransitionType('bottom', _getBottomTransition.getBottomTransition);
  registerTransitionType('left', _getLeftTransition.getLeftTransition);
  registerTransitionType('right', _getRightTransition.getRightTransition);
  registerTransitionType('horizontal', _getHorizontalTransition.getHorizontalTransition);
  registerTransitionType('vertical', _getVerticalTransition.getVerticalTransition);
  registerTransitionType('flip', _getFlipTransition.getFlipTransition);
  registerTransitionType('none', function () {return {};});
}

function registerTransitionType(name,
transitionFunction) {
  transitionTypes.push({ name: name, transitionFunction: transitionFunction });
}

function getTransitionType(name) {
  var transitionType = transitionTypes.find(function (e) {return e.name === name;});
  if (transitionType) return transitionType.transitionFunction;
  return null;
}