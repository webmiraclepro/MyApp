{"version":3,"sources":["getChildNavigation.js"],"names":["createParamGetter","params","route","paramName","children","childRoute","navigation","r","childRouter","focusedGrandChildRoute","actionCreators","actionHelpers","Object","actionCreator","action","isFirstRouteInParent","parentNavigation","getCurrentParentNavigation","state","router","actions","getParam","childSubscriber","getChildNavigation","nav","isFocused","currentNavigation","routes","index","dispatch","getScreenProps","dangerouslyGetParent","addListener","emit"],"mappings":"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","sourcesContent":["import getChildEventSubscriber from './getChildEventSubscriber';\nimport getChildRouter from './getChildRouter';\nimport getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nconst createParamGetter = route => (paramName, defaultValue) => {\n  const params = route.params;\n\n  if (params && paramName in params) {\n    return params[paramName];\n  }\n\n  return defaultValue;\n};\n\nfunction getChildNavigation(navigation, childKey, getCurrentParentNavigation) {\n  const children = getChildrenNavigationCache(navigation);\n  const childRoute = navigation.state.routes.find(r => r.key === childKey);\n\n  if (!childRoute) {\n    return null;\n  }\n\n  if (children[childKey] && children[childKey].state === childRoute) {\n    return children[childKey];\n  }\n\n  const childRouter = getChildRouter(navigation.router, childRoute.routeName);\n\n  // If the route has children, we'll use this to pass in to the action creators\n  // for the childRouter so that any action that depends on the active route will\n  // behave as expected. We don't explicitly require that routers implement routes\n  // and index properties, but if we did then we would put an invariant here to\n  // ensure that a focusedGrandChildRoute exists if childRouter is defined.\n  const focusedGrandChildRoute =\n    childRoute.routes && typeof childRoute.index === 'number'\n      ? childRoute.routes[childRoute.index]\n      : null;\n\n  const actionCreators = {\n    ...navigation.actions,\n    ...navigation.router.getActionCreators(childRoute, navigation.state.key),\n    ...(childRouter\n      ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key)\n      : {}),\n    ...getNavigationActionCreators(childRoute),\n  };\n\n  const actionHelpers = {};\n  Object.keys(actionCreators).forEach(actionName => {\n    actionHelpers[actionName] = (...args) => {\n      const actionCreator = actionCreators[actionName];\n      const action = actionCreator(...args);\n      return navigation.dispatch(action);\n    };\n  });\n\n  let isFirstRouteInParent = true;\n\n  const parentNavigation = getCurrentParentNavigation();\n\n  if (parentNavigation) {\n    isFirstRouteInParent =\n      parentNavigation.state.routes.indexOf(childRoute) === 0;\n  }\n\n  if (\n    children[childKey] &&\n    children[childKey].isFirstRouteInParent() === isFirstRouteInParent\n  ) {\n    children[childKey] = {\n      ...children[childKey],\n      ...actionHelpers,\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n    };\n    return children[childKey];\n  } else {\n    const childSubscriber = getChildEventSubscriber(\n      navigation.addListener,\n      childKey\n    );\n\n    children[childKey] = {\n      ...actionHelpers,\n\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n\n      getChildNavigation: grandChildKey =>\n        getChildNavigation(children[childKey], grandChildKey, () => {\n          const nav = getCurrentParentNavigation();\n          return nav && nav.getChildNavigation(childKey);\n        }),\n\n      isFocused: () => {\n        const currentNavigation = getCurrentParentNavigation();\n        if (!currentNavigation) {\n          return false;\n        }\n        const { routes, index } = currentNavigation.state;\n        if (!currentNavigation.isFocused()) {\n          return false;\n        }\n        if (routes[index].key === childKey) {\n          return true;\n        }\n        return false;\n      },\n      isFirstRouteInParent: () => isFirstRouteInParent,\n      dispatch: navigation.dispatch,\n      getScreenProps: navigation.getScreenProps,\n      dangerouslyGetParent: getCurrentParentNavigation,\n      addListener: childSubscriber.addListener,\n      emit: childSubscriber.emit,\n    };\n    return children[childKey];\n  }\n}\n\nexport default getChildNavigation;\n"]}