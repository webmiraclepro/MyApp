{"version":3,"sources":["TransitionItem.js"],"names":["TransitionItem","name","route","reactElement","shared","appear","disappear","delay","index","anchor","animated","inline","getNodeHandle","getViewRef","_isMounted","forceUpdate","flattenedItemStyle","element","React","Children","only","props","children","style","StyleSheet","flatten","refresh","flattenedStyle","shouldRenderRenderElement","type","displayName","_testRenderer","ShallowRenderer","createRenderer","tree","render","err","viewMetrics","itemMetrics","x","y","width","height","ri","getRotation","t","getRotationRad","r","boundingBox","theta","skipWidth","Platform","OS","metrics","boundingBoxMetrics","rect","_rotation","getFlattenedStyle","retVal","value","rotate","rotation","endsWith","parseInt","substring","length","other","validate","i","Error","containerRouteName","getDegreesToRadians","getRotationDeg","getRadiansToDegrees","degrees","Math","PI","rad"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport ShallowRenderer from './Utils/shallowRenderer';\nimport { Metrics } from './Types/Metrics';\nimport { getRotationFromStyle, getBoundingBox, getOriginalRect } from './Utils';\n\ntype Size = {\n  x: number,\n  y: number\n}\n\nexport default class TransitionItem {\n  constructor(\n    name: string, route: string, reactElement: Object,\n    shared: boolean, appear: string, disappear: string,\n    delay: boolean, index: number, anchor: string,\n    animated: string, inline: boolean,\n  ) {\n    this.name = name;\n    this.route = route;\n    this.reactElement = reactElement;\n    this.shared = shared;\n    this.appear = appear;\n    this.disappear = disappear;\n    this.delay = delay;\n    this.index = index;\n    this.anchor = anchor;\n    this.animated = animated;\n    this.inline = inline;\n  }\n\n  name: string\n\n  route: string\n\n  reactElement: Object\n\n  metrics: Metrics\n\n  shared: boolean\n\n  appear: string | Function\n\n  disappear: string | Function\n\n  delay: boolean\n\n  layoutReady: boolean\n\n  inline: boolean\n\n  flattenedStyle: ?StyleSheet.Styles\n\n  flattenedItemStyle: ?StyleSheet.Styles\n\n  boundingBoxMetrics: Metrics\n\n  index: number\n\n  anchor: string\n\n  animated: string\n\n  _rotation: any;\n\n  _testRenderer: any;\n\n  getNodeHandle() {\n    return this.reactElement.getNodeHandle();\n  }\n\n  getViewRef() {\n    return this.reactElement.getViewRef();\n  }\n\n  forceUpdate() {\n    if (this.reactElement._isMounted) {\n      this.reactElement.forceUpdate();\n    }\n  }\n\n  getIsMounted() {\n    return this.reactElement._isMounted;\n  }\n\n  getItemStyle() {\n    if (!this.flattenedItemStyle) {\n      const element = React.Children.only(this.reactElement.props.children);\n      if (!element) { return {}; }\n      const { style } = element.props;\n      this.flattenedItemStyle = StyleSheet.flatten(style);\n    }\n    return this.flattenedItemStyle;\n  }\n\n  getFlattenedStyle(refresh = false) {\n    if (refresh || !this.flattenedStyle) {\n      const element = React.Children.only(this.reactElement.props.children);\n      if (!element) { return null; }\n\n      // Shallow renderer should not need to be used for views we know does\n      // not create any magic inner styles. The following test is needed\n      // when running in production mode.\n      const shouldRenderRenderElement = element.type !== 'RCTView'\n        && element.type && element.type.displayName !== 'View';\n\n      let { style } = element.props;\n\n      if (shouldRenderRenderElement) {\n        if (!this._testRenderer) {\n          this._testRenderer = ShallowRenderer.createRenderer();\n        }\n        try {\n          const tree = this._testRenderer.render(element);\n          style = tree.props.style ? tree.props.style : style;\n        } catch (err) {\n          // Ignore\n        }\n      }\n\n      if (!style) return null;\n      this.flattenedStyle = StyleSheet.flatten(style);\n    }\n\n    return this.flattenedStyle;\n  }\n\n  updateMetrics(viewMetrics: Metrics, itemMetrics: Metrics) {\n    const { x, y, width, height } = itemMetrics;\n\n    const ri = this.getRotation();\n    const t = getRotationRad(ri);\n\n    if (t !== 0) {\n      const r = getOriginalRect({\n        boundingBox: { x, y, width, height },\n        theta: t,\n        skipWidth: Platform.OS !== 'ios',\n      });\n\n      this.metrics = {\n        x: r.x - viewMetrics.x,\n        y: r.y - viewMetrics.y,\n        width: r.width,\n        height: r.height,\n      };\n\n      this.boundingBoxMetrics = getBoundingBox({ rect: this.metrics, theta: t });\n    } else {\n      this.metrics = { x: x - viewMetrics.x, y: y - viewMetrics.y, width, height };\n      this.boundingBoxMetrics = this.metrics;\n    }\n\n    // console.log(this.name  + \"/\" + this.route + \"-\" + this.metrics.x + \",\" + this.metrics.y + \" - \" + this.metrics.width + \",\" + this.metrics.height);\n  }\n\n  getRotation() {\n    if (!this._rotation) {\n      const ri = getRotationFromStyle(this.getFlattenedStyle());\n      let retVal = { type: 'unknown', value: 0 };\n      if (ri.rotate) {\n        if (ri.rotate.rotate) {\n          const rotation: String = ri.rotate.rotate;\n          if (rotation.endsWith('deg')) {\n            retVal = { type: 'deg', value: parseInt(rotation.substring(0, rotation.length - 3)) };\n          } else if (rotation.endsWith('rad')) {\n            retVal = { type: 'rad', value: parseInt(rotation.substring(0, rotation.length - 3)) };\n          }\n        }\n      }\n      this._rotation = retVal;\n    }\n    return this._rotation;\n  }\n\n  scaleRelativeTo(other: TransitionItem): Size {\n    const validate = i => {\n      if (!i.metrics) {\n        throw new Error(`No metrics in ${i.name}:${i.containerRouteName}`);\n      }\n    };\n    validate(this);\n    validate(other);\n    return {\n      x: this.metrics.width / other.metrics.width,\n      y: this.metrics.height / other.metrics.height,\n    };\n  }\n}\n\nconst getRotationRad = (ri) => {\n  if (ri.type === 'deg') return getDegreesToRadians(ri.value);\n  return ri.value;\n};\n\nconst getRotationDeg = (ri) => {\n  if (ri.type === 'rad') return getRadiansToDegrees(ri.value);\n  return ri.value;\n};\n\nconst getDegreesToRadians = (degrees: number): number => degrees * Math.PI / 180;\nconst getRadiansToDegrees = (rad: number): number => rad * 180 / Math.PI;\n"]}