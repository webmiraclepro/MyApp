b9368e6607d73974b69c2946284e865e
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));var _react = _interopRequireDefault(require("react"));
var _reactNavigation = require("react-navigation");







var _FluidTransitioner = _interopRequireDefault(require("./FluidTransitioner"));var _jsxFileName = "/Users/jdnichollsc/dev/react-native/Randomuser-me/node_modules/react-navigation-fluid-transitions/createFluidNavigator.js";var _default =

function _default(routeConfigMap) {var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var

  initialRouteName =






  stackConfig.initialRouteName,initialRouteParams = stackConfig.initialRouteParams,paths = stackConfig.paths,mode = stackConfig.mode,transitionConfig = stackConfig.transitionConfig,defaultNavigationOptions = stackConfig.defaultNavigationOptions,style = stackConfig.style;

  var stackRouterConfig = (0, _objectSpread2.default)({},
  _reactNavigation.defaultNavigationOptions, {
    initialRouteName: initialRouteName,
    initialRouteParams: initialRouteParams,
    paths: paths,
    defaultNavigationOptions: defaultNavigationOptions,
    getCustomActionCreators: _reactNavigation.getCustomActionCreators });var


  FluidNavigationView = function (_React$Component) {(0, _inherits2.default)(FluidNavigationView, _React$Component);function FluidNavigationView() {(0, _classCallCheck2.default)(this, FluidNavigationView);return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FluidNavigationView).apply(this, arguments));}(0, _createClass2.default)(FluidNavigationView, [{ key: "render", value: function render()
      {var _this$props =

        this.props,navigation = _this$props.navigation,screenProps = _this$props.screenProps,descriptors = _this$props.descriptors,onTransitionStart = _this$props.onTransitionStart,_onTransitionEnd = _this$props.onTransitionEnd;

        return (
          _react.default.createElement(_FluidTransitioner.default, {
            mode: mode,
            style: style,
            navigation: navigation,
            screenProps: screenProps,
            descriptors: descriptors,
            transitionConfig: transitionConfig,
            onTransitionStart: onTransitionStart,
            onTransitionEnd: function onTransitionEnd(transition, lastTransition) {
              if (transition.navigation.state.isTransitioning) {
                navigation.dispatch(
                _reactNavigation.StackActions.completeTransition({
                  key: navigation.state.key,
                  toChildKey: navigation.state.routes[navigation.state.index].key }));


              }
              if (_onTransitionEnd) _onTransitionEnd(transition, lastTransition);
            }, __source: { fileName: _jsxFileName, lineNumber: 38 } }));


      } }]);return FluidNavigationView;}(_react.default.Component);


  var router = (0, _reactNavigation.StackRouter)(routeConfigMap, stackRouterConfig);
  return (0, _reactNavigation.createNavigator)(FluidNavigationView, router, stackConfig);
};exports.default = _default;