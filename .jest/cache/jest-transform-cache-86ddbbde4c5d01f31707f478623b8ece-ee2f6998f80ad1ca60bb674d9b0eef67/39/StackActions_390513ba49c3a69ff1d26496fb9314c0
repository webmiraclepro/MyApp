b6b03ad0525a9d0a2370f4417dadf8e3
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.completeTransition = exports.replace = exports.reset = exports.push = exports.popToTop = exports.pop = exports.COMPLETE_TRANSITION = exports.REPLACE = exports.RESET = exports.PUSH = exports.POP_TO_TOP = exports.POP = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var POP = 'Navigation/POP';
exports.POP = POP;
var POP_TO_TOP = 'Navigation/POP_TO_TOP';
exports.POP_TO_TOP = POP_TO_TOP;
var PUSH = 'Navigation/PUSH';
exports.PUSH = PUSH;
var RESET = 'Navigation/RESET';
exports.RESET = RESET;
var REPLACE = 'Navigation/REPLACE';
exports.REPLACE = REPLACE;
var COMPLETE_TRANSITION = 'Navigation/COMPLETE_TRANSITION';
exports.COMPLETE_TRANSITION = COMPLETE_TRANSITION;

var pop = function pop(payload) {
  return (0, _objectSpread2.default)({
    type: POP
  }, payload);
};

exports.pop = pop;

var popToTop = function popToTop(payload) {
  return (0, _objectSpread2.default)({
    type: POP_TO_TOP
  }, payload);
};

exports.popToTop = popToTop;

var push = function push(payload) {
  return (0, _objectSpread2.default)({
    type: PUSH
  }, payload);
};

exports.push = push;

var reset = function reset(payload) {
  return (0, _objectSpread2.default)({
    type: RESET,
    key: null
  }, payload);
};

exports.reset = reset;

var replace = function replace(payload) {
  return (0, _objectSpread2.default)({
    type: REPLACE
  }, payload);
};

exports.replace = replace;

var completeTransition = function completeTransition(payload) {
  return (0, _objectSpread2.default)({
    type: COMPLETE_TRANSITION,
    preserveFocus: true
  }, payload);
};

exports.completeTransition = completeTransition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0YWNrQWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJQT1AiLCJQT1BfVE9fVE9QIiwiUFVTSCIsIlJFU0VUIiwiUkVQTEFDRSIsIkNPTVBMRVRFX1RSQU5TSVRJT04iLCJwb3AiLCJ0eXBlIiwicG9wVG9Ub3AiLCJwdXNoIiwicmVzZXQiLCJrZXkiLCJyZXBsYWNlIiwiY29tcGxldGVUcmFuc2l0aW9uIiwicHJlc2VydmVGb2N1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sSUFBTUEsR0FBRyxHQUFULGdCQUFBOztBQUNBLElBQU1DLFVBQVUsR0FBaEIsdUJBQUE7O0FBQ0EsSUFBTUMsSUFBSSxHQUFWLGlCQUFBOztBQUNBLElBQU1DLEtBQUssR0FBWCxrQkFBQTs7QUFDQSxJQUFNQyxPQUFPLEdBQWIsb0JBQUE7O0FBQ0EsSUFBTUMsbUJBQW1CLEdBQXpCLGdDQUFBOzs7QUFFQSxJQUFNQyxHQUFHLEdBQUhBLFNBQUFBLEdBQUFBLENBQU0sT0FBTkEsRUFBYTtBQUFBLFNBQUEsQ0FBQSxHQUFBLGNBQUEsQ0FBQSxPQUFBLEVBQUE7QUFDeEJDLElBQUFBLElBQUksRUFEb0I7QUFBQSxHQUFBLEVBQUEsT0FBQSxDQUFBO0FBQW5CLENBQUE7Ozs7QUFLQSxJQUFNQyxRQUFRLEdBQVJBLFNBQUFBLFFBQUFBLENBQVcsT0FBWEEsRUFBa0I7QUFBQSxTQUFBLENBQUEsR0FBQSxjQUFBLENBQUEsT0FBQSxFQUFBO0FBQzdCRCxJQUFBQSxJQUFJLEVBRHlCO0FBQUEsR0FBQSxFQUFBLE9BQUEsQ0FBQTtBQUF4QixDQUFBOzs7O0FBS0EsSUFBTUUsSUFBSSxHQUFKQSxTQUFBQSxJQUFBQSxDQUFPLE9BQVBBLEVBQWM7QUFBQSxTQUFBLENBQUEsR0FBQSxjQUFBLENBQUEsT0FBQSxFQUFBO0FBQ3pCRixJQUFBQSxJQUFJLEVBRHFCO0FBQUEsR0FBQSxFQUFBLE9BQUEsQ0FBQTtBQUFwQixDQUFBOzs7O0FBS0EsSUFBTUcsS0FBSyxHQUFMQSxTQUFBQSxLQUFBQSxDQUFRLE9BQVJBLEVBQWU7QUFBQSxTQUFBLENBQUEsR0FBQSxjQUFBLENBQUEsT0FBQSxFQUFBO0FBQzFCSCxJQUFBQSxJQUFJLEVBRHNCLEtBQUE7QUFFMUJJLElBQUFBLEdBQUcsRUFGdUI7QUFBQSxHQUFBLEVBQUEsT0FBQSxDQUFBO0FBQXJCLENBQUE7Ozs7QUFNQSxJQUFNQyxPQUFPLEdBQVBBLFNBQUFBLE9BQUFBLENBQVUsT0FBVkEsRUFBaUI7QUFBQSxTQUFBLENBQUEsR0FBQSxjQUFBLENBQUEsT0FBQSxFQUFBO0FBQzVCTCxJQUFBQSxJQUFJLEVBRHdCO0FBQUEsR0FBQSxFQUFBLE9BQUEsQ0FBQTtBQUF2QixDQUFBOzs7O0FBS0EsSUFBTU0sa0JBQWtCLEdBQWxCQSxTQUFBQSxrQkFBQUEsQ0FBcUIsT0FBckJBLEVBQTRCO0FBQUEsU0FBQSxDQUFBLEdBQUEsY0FBQSxDQUFBLE9BQUEsRUFBQTtBQUN2Q04sSUFBQUEsSUFBSSxFQURtQyxtQkFBQTtBQUV2Q08sSUFBQUEsYUFBYSxFQUYwQjtBQUFBLEdBQUEsRUFBQSxPQUFBLENBQUE7QUFBbEMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQT1AgPSAnTmF2aWdhdGlvbi9QT1AnO1xuZXhwb3J0IGNvbnN0IFBPUF9UT19UT1AgPSAnTmF2aWdhdGlvbi9QT1BfVE9fVE9QJztcbmV4cG9ydCBjb25zdCBQVVNIID0gJ05hdmlnYXRpb24vUFVTSCc7XG5leHBvcnQgY29uc3QgUkVTRVQgPSAnTmF2aWdhdGlvbi9SRVNFVCc7XG5leHBvcnQgY29uc3QgUkVQTEFDRSA9ICdOYXZpZ2F0aW9uL1JFUExBQ0UnO1xuZXhwb3J0IGNvbnN0IENPTVBMRVRFX1RSQU5TSVRJT04gPSAnTmF2aWdhdGlvbi9DT01QTEVURV9UUkFOU0lUSU9OJztcblxuZXhwb3J0IGNvbnN0IHBvcCA9IHBheWxvYWQgPT4gKHtcbiAgdHlwZTogUE9QLFxuICAuLi5wYXlsb2FkLFxufSk7XG5cbmV4cG9ydCBjb25zdCBwb3BUb1RvcCA9IHBheWxvYWQgPT4gKHtcbiAgdHlwZTogUE9QX1RPX1RPUCxcbiAgLi4ucGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgY29uc3QgcHVzaCA9IHBheWxvYWQgPT4gKHtcbiAgdHlwZTogUFVTSCxcbiAgLi4ucGF5bG9hZCxcbn0pO1xuXG5leHBvcnQgY29uc3QgcmVzZXQgPSBwYXlsb2FkID0+ICh7XG4gIHR5cGU6IFJFU0VULFxuICBrZXk6IG51bGwsXG4gIC4uLnBheWxvYWQsXG59KTtcblxuZXhwb3J0IGNvbnN0IHJlcGxhY2UgPSBwYXlsb2FkID0+ICh7XG4gIHR5cGU6IFJFUExBQ0UsXG4gIC4uLnBheWxvYWQsXG59KTtcblxuZXhwb3J0IGNvbnN0IGNvbXBsZXRlVHJhbnNpdGlvbiA9IHBheWxvYWQgPT4gKHtcbiAgdHlwZTogQ09NUExFVEVfVFJBTlNJVElPTixcbiAgcHJlc2VydmVGb2N1czogdHJ1ZSxcbiAgLi4ucGF5bG9hZCxcbn0pO1xuIl19