{"version":3,"sources":["getBottomTransition.js"],"names":["getBottomTransition","transitionSpecification","metrics","undefined","start","end","boundingbox","dimensions","y","distanceValue","height","startValue","endValue","direction","RouteDirection","to","progress","interpolate","inputRange","outputRange","transform","translateY"],"mappings":";;;;;AAAA;;AAEO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,uBAAD,EAAsD;AACvF,MAAI,CAACA,uBAAD,IAA4BA,uBAAuB,CAACC,OAAxB,KAAoCC,SAApE,EAA+E;AAC7E,WAAO,EAAP;AACD;;AAHsF,MAI/EC,KAJ+E,GAIvCH,uBAJuC,CAI/EG,KAJ+E;AAAA,MAIxEC,GAJwE,GAIvCJ,uBAJuC,CAIxEI,GAJwE;AAAA,MAInEC,WAJmE,GAIvCL,uBAJuC,CAInEK,WAJmE;AAAA,MAItDC,UAJsD,GAIvCN,uBAJuC,CAItDM,UAJsD;AAAA,MAK/EC,CAL+E,GAKzEF,WALyE,CAK/EE,CAL+E;AAOvF,MAAMC,aAAa,GAAGF,UAAU,CAACG,MAAX,GAAoBF,CAA1C;AACA,MAAIG,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAGH,aAAf;;AAEA,MAAIR,uBAAuB,CAACY,SAAxB,KAAsCC,sBAAeC,EAAzD,EAA6D;AAC3DJ,IAAAA,UAAU,GAAGF,aAAb;AACAG,IAAAA,QAAQ,GAAG,CAAX;AACD;;AAED,MAAMI,QAAQ,GAAGf,uBAAuB,CAACe,QAAxB,CAAiCC,WAAjC,CAA6C;AAC5DC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAId,KAAJ,EAAWC,GAAX,EAAgB,CAAhB,CADgD;AAE5Dc,IAAAA,WAAW,EAAE,CAACR,UAAD,EAAaA,UAAb,EAAyBC,QAAzB,EAAmCA,QAAnC;AAF+C,GAA7C,CAAjB;AAKA,SAAO;AAAEQ,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAEL;AAAd,KAAD;AAAb,GAAP;AACD,CAtBM","sourcesContent":["import { RouteDirection, TransitionSpecification } from '../Types';\n\nexport const getBottomTransition = (transitionSpecification: TransitionSpecification) => {\n  if (!transitionSpecification || transitionSpecification.metrics === undefined) {\n    return {};\n  }\n  const { start, end, boundingbox, dimensions } = transitionSpecification;\n  const { y } = boundingbox;\n\n  const distanceValue = dimensions.height - y;\n  let startValue = 0;\n  let endValue = distanceValue;\n\n  if (transitionSpecification.direction === RouteDirection.to) {\n    startValue = distanceValue;\n    endValue = 0;\n  }\n\n  const progress = transitionSpecification.progress.interpolate({\n    inputRange: [0, start, end, 1],\n    outputRange: [startValue, startValue, endValue, endValue],\n  });\n\n  return { transform: [{ translateY: progress }] };\n};\n"]}