{"version":3,"sources":["InterpolatorTypes.js"],"names":["interpolators","registerInterpolator","name","interpolatorFunction","push","initInterpolatorTypes","getBackgroundInterpolator","getBorderInterpolator","getPositionInterpolator","getScaleInterpolator","getRotationInterpolator","getInterpolatorTypes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAOA,IAAMA,aAAuC,GAAG,EAAhD;;AAGO,SAASC,oBAAT,CAA8BC,IAA9B,EACLC,oBADK,EAC8C;AACnDH,EAAAA,aAAa,CAACI,IAAd,CAAmB;AAAEF,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,oBAAoB,EAApBA;AAAR,GAAnB;AACD;;AAEM,SAASE,qBAAT,GAAiC;AACtCJ,EAAAA,oBAAoB,CAAC,YAAD,EAAeK,oDAAf,CAApB;AACAL,EAAAA,oBAAoB,CAAC,cAAD,EAAiBM,4CAAjB,CAApB;AACAN,EAAAA,oBAAoB,CAAC,UAAD,EAAaO,gDAAb,CAApB;AACAP,EAAAA,oBAAoB,CAAC,OAAD,EAAUQ,0CAAV,CAApB;AACAR,EAAAA,oBAAoB,CAAC,UAAD,EAAaS,gDAAb,CAApB;AACD;;AAEM,SAASC,oBAAT,GAAoD;AACzD,SAAOX,aAAP;AACD","sourcesContent":["import { getPositionInterpolator } from './getPositionInterpolator';\nimport { getScaleInterpolator } from './getScaleInterpolator';\nimport { getRotationInterpolator } from './getRotationInterpolator';\nimport { getBorderInterpolator } from './getBorderInterpolator';\nimport { getBackgroundInterpolator } from './getBackgroundInterpolator';\n\ntype InterpolatorEntry = {\n  name: string,\n  interpolatorFunction: (spec: InterpolatorSpecification) => InterpolatorResult,\n}\n\nconst interpolators: Array<InterpolatorEntry> = [];\n\n// This function can be called to register other transition functions\nexport function registerInterpolator(name: string,\n  interpolatorFunction: Function): InterpolatorEntry {\n  interpolators.push({ name, interpolatorFunction });\n}\n\nexport function initInterpolatorTypes() {\n  registerInterpolator('background', getBackgroundInterpolator);\n  registerInterpolator('borderRadius', getBorderInterpolator);\n  registerInterpolator('position', getPositionInterpolator);\n  registerInterpolator('scale', getScaleInterpolator);\n  registerInterpolator('rotation', getRotationInterpolator);\n}\n\nexport function getInterpolatorTypes() : InterpolatorEntry {\n  return interpolators;\n}\n"]}