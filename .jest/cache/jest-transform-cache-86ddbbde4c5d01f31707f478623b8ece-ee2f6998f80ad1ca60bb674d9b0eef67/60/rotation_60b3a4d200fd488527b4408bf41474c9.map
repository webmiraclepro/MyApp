{"version":3,"sources":["rotation.js"],"names":["getOriginalRect","params","theta","boundingBox","x","y","width","height","skipWidth","cx","Math","cos","sin","cy","p0","rotatePoint","round","abs","Number","EPSILON","small","quad","getQuadrant","a","pow","aw","bw","nw","ah","bh","nh","retVal","nx","ny","getBoundingBox","rect","tl","bl","tr","br","minX","min","maxX","max","minY","maxY","angle","PI","normangle","p","degToRad","deg","radToDeg","rad"],"mappings":"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","sourcesContent":["\nimport { Metrics } from '../Types/Metrics';\n\nexport type GetOriginalRectParameters = {\n  boundingBox: Metrics, // Bounding box\n  theta: number, // Original rotation in radians\n  skipWidth: ?Boolean // Should we perform the Android version of the rotation where\n                      // Width/Height is same (no bounding box, just x/y is set?)\n}\nexport const getOriginalRect = (params: GetOriginalRectParameters): Metrics => {\n  if (params.theta === 0) {\n    return params.boundingBox;\n  }\n\n  const { x, y, width, height } = params.boundingBox;\n\n  if (params.skipWidth) {\n    const cx = x + ((Math.cos(params.theta) * width - Math.sin(params.theta) * height) / 2);\n    const cy = y + ((Math.sin(params.theta) * width + Math.cos(params.theta) * height) / 2);\n    const p0 = rotatePoint({ x, y, cx, cy, theta: params.theta });\n    return { x: Math.round(p0.x), y: Math.round(p0.y), width, height };\n  }\n\n  let theta = -1 * params.theta;\n  let cos = Math.cos(theta);\n  let sin = Math.sin(theta);\n\n  if (Math.abs(Math.abs(sin) - Math.abs(cos)) <= Number.EPSILON) {\n    theta = small + theta;\n    cos = Math.cos(theta);\n    sin = Math.sin(theta);\n  }\n\n  // Get rotated height/width\n  const quad = getQuadrant(theta);\n  const a = 1 / (Math.pow(cos, 2) - (Math.pow(sin, 2)));\n\n  const aw = (1 * width) * cos;\n  const bw = (height * sin);\n  const nw = (quad === 0 || quad === 2) ? a * (aw - bw) : a * (aw + bw);\n\n  const ah = (-1 * width) * sin;\n  const bh = (height * cos);\n  const nh = (quad === 0 || quad === 2) ? a * (ah + bh) : a * (ah - bh);\n\n  const retVal = {\n    x: Math.round(x + (width - Math.abs(nw)) * 0.5),\n    y: Math.round(y + (height - Math.abs(nh)) * 0.5),\n    width: Math.abs(Math.round(nw)),\n    height: Math.abs(Math.round(nh)),\n  };\n  return retVal;\n};\n\nexport type RotatePointParameters = {\n  x: number,\n  y: number,\n  cx: number,\n  cy: number,\n  theta: number,\n}\nexport const rotatePoint = (params: RotatePointParameters) => {\n  const { x, y, cx, cy, theta } = params;\n\n  const cos = Math.cos(theta);\n  const sin = Math.sin(theta);\n  const nx = (cos * (x - cx)) + (sin * (y - cy)) + cx;\n  const ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n  return { x: nx, y: ny };\n};\n\nexport type GetBoundingBoxParameters = {\n  rect: Metrics,\n  theta: number,\n};\nexport const getBoundingBox = (params: GetBoundingBoxParameters) => {\n  const { x, y, width, height } = params.rect;\n  const { theta } = params;\n\n  const cx = x + (width / 2);\n  const cy = y + (height / 2);\n\n  const tl = rotatePoint({ x, y, cx, cy, theta });\n  const bl = rotatePoint({ x, y: y + height, cx, cy, theta });\n  const tr = rotatePoint({ x: x + width, y, cx, cy, theta });\n  const br = rotatePoint({ x: x + width, y: y + height, cx, cy, theta });\n\n  const minX = Math.min(tl.x, bl.x, tr.x, br.x);\n  const maxX = Math.max(tl.x, bl.x, tr.x, br.x);\n  const minY = Math.min(tl.y, bl.y, tr.y, br.y);\n  const maxY = Math.max(tl.y, bl.y, tr.y, br.y);\n\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n};\n\nexport const getQuadrant = (theta: number) => {\n  const angle = theta * 180 / Math.PI;\n  let normangle = angle % 360;\n  if (normangle < 0) {\n    normangle += 360;\n  }\n  const p = normangle / 360;\n  if (p >= 0 && p <= 0.25) return 0;\n  if (p > 0.25 && p <= 0.5) return 1;\n  if (p > 0.5 && p <= 0.75) return 2;\n  if (p > 0.75 && p <= 1) return 3;\n  return -1;\n};\n\nexport const degToRad = (deg: number): number => deg * Math.PI / 180;\nexport const radToDeg = (rad: number): number => rad * 180 / Math.PI;\n\nconst small = degToRad(0.00000001);\n"]}