{"version":3,"sources":["ModularHeaderBackButton.tsx"],"names":["ModularHeaderBackButton","React","PureComponent","defaultProps","tintColor","truncatedTitle","state","onTextLayout","initialTextWidth","e","backImage","backTitleVisible","BackImage","styles","defaultBackImage","getTitleText","width","title","titleStyle","backTitleText","LabelContainerComponent","color","onPress","ButtonContainerComponent","StyleSheet","container","alignItems","flexDirection","backgroundColor","marginBottom","overflow","fontSize","paddingRight","icon","height","marginLeft","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","iconWithTitle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  Text,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nimport defaultBackImage from '../assets/back-icon.png';\nimport { HeaderBackbuttonProps } from '../../types';\n\ntype Props = HeaderBackbuttonProps & {\n  LabelContainerComponent: React.ComponentType;\n  ButtonContainerComponent: React.ComponentType;\n};\n\ntype State = {\n  initialTextWidth?: number;\n};\n\nclass ModularHeaderBackButton extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    tintColor: '#037aff',\n    truncatedTitle: 'Back',\n  };\n\n  state: State = {};\n\n  private onTextLayout = (e: LayoutChangeEvent) => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  private renderBackImage() {\n    const { backImage, backTitleVisible, tintColor } = this.props;\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      const BackImage = backImage;\n\n      return <BackImage tintColor={tintColor} />;\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            !!backTitleVisible && styles.iconWithTitle,\n            !!tintColor && { tintColor },\n          ]}\n          source={defaultBackImage}\n        />\n      );\n    }\n  }\n\n  private getTitleText = () => {\n    const { width, title, truncatedTitle } = this.props;\n\n    let { initialTextWidth } = this.state;\n\n    if (title === null) {\n      return null;\n    } else if (!title) {\n      return truncatedTitle;\n    } else if (initialTextWidth && width && initialTextWidth > width) {\n      return truncatedTitle;\n    } else {\n      return title.length > 8 ? truncatedTitle : title;\n    }\n  };\n\n  private maybeRenderTitle() {\n    const { backTitleVisible, titleStyle, tintColor } = this.props;\n    let backTitleText = this.getTitleText();\n\n    if (!backTitleVisible || backTitleText === null) {\n      return null;\n    }\n\n    const { LabelContainerComponent } = this.props;\n\n    return (\n      <LabelContainerComponent>\n        <Text\n          accessible={false}\n          onLayout={this.onTextLayout}\n          style={[\n            styles.title,\n            !!tintColor && { color: tintColor },\n            titleStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {this.getTitleText()}\n        </Text>\n      </LabelContainerComponent>\n    );\n  }\n\n  render() {\n    const { onPress, title } = this.props;\n    const { ButtonContainerComponent } = this.props;\n\n    return (\n      <TouchableItem\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={title ? `${title}, back` : 'Go back'}\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={onPress}\n        style={styles.container}\n        borderless\n      >\n        <View style={styles.container}>\n          <ButtonContainerComponent>\n            {this.renderBackImage()}\n          </ButtonContainerComponent>\n          {this.maybeRenderTitle()}\n        </View>\n      </TouchableItem>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    marginBottom: 1,\n    overflow: 'visible',\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10,\n  },\n  icon: {\n    height: 21,\n    width: 12,\n    marginLeft: 9,\n    marginRight: 22,\n    marginVertical: 12,\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  iconWithTitle: {\n    marginRight: 3,\n  },\n});\n\nexport default ModularHeaderBackButton;\n"]}