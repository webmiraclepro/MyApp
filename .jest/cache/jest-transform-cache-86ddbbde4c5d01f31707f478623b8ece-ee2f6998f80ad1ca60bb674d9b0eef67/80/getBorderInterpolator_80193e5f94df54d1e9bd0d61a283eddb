e2db75adac17df3892b5209920166bf5
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBorderInterpolator = void 0;

var _reactNative = require("react-native");

var _InterpolatorSpecification = require("../Types/InterpolatorSpecification");

var _getStyleInterpolator = require("./getStyleInterpolator");

var getBorderInterpolator = function getBorderInterpolator(spec) {
  var borderWidth = (0, _getStyleInterpolator.getStyleInterpolator)('borderWidth', 0, false, spec);
  var borderColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderColor', 0, false, spec);
  var borderTopColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderTopColor', 0, false, spec);
  var borderRightColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderRightColor', 0, false, spec);
  var borderBottomColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderBottomColor', 0, false, spec);
  var borderLeftColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderLeftColor', 0, false, spec);
  var borderStartColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderStartColor', 0, false, spec);
  var borderEndColor = (0, _getStyleInterpolator.getStyleInterpolator)('borderEndColor', 0, false, spec);
  var borderRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderRadius', 0, false, spec);
  var borderTopLeftRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderTopLeftRadius', 0, false, spec);
  var borderTopRightRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderTopRightRadius', 0, false, spec);
  var borderTopStartRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderTopStartRadius', 0, false, spec);
  var borderTopEndRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderTopEndRadius', 0, false, spec);
  var borderBottomLeftRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderBottomLeftRadius', 0, false, spec);
  var borderBottomRightRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderBottomRightRadius', 0, false, spec);
  var borderBottomStartRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderBottomStartRadius', 0, false, spec);
  var borderBottomEndRadius = (0, _getStyleInterpolator.getStyleInterpolator)('borderBottomEndRadius', 0, false, spec);
  return {
    animationStyles: {
      borderWidth: borderWidth,
      borderColor: borderColor,
      borderTopColor: borderTopColor,
      borderRightColor: borderRightColor,
      borderBottomColor: borderBottomColor,
      borderLeftColor: borderLeftColor,
      borderStartColor: borderStartColor,
      borderEndColor: borderEndColor,
      borderRadius: borderRadius,
      borderTopLeftRadius: borderTopLeftRadius,
      borderTopRightRadius: borderTopRightRadius,
      borderTopStartRadius: borderTopStartRadius,
      borderTopEndRadius: borderTopEndRadius,
      borderBottomLeftRadius: borderBottomLeftRadius,
      borderBottomRightRadius: borderBottomRightRadius,
      borderBottomStartRadius: borderBottomStartRadius,
      borderBottomEndRadius: borderBottomEndRadius
    }
  };
};

exports.getBorderInterpolator = getBorderInterpolator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEJvcmRlckludGVycG9sYXRvci5qcyJdLCJuYW1lcyI6WyJnZXRCb3JkZXJJbnRlcnBvbGF0b3IiLCJzcGVjIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJvcmRlclRvcENvbG9yIiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlckJvdHRvbUNvbG9yIiwiYm9yZGVyTGVmdENvbG9yIiwiYm9yZGVyU3RhcnRDb2xvciIsImJvcmRlckVuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyVG9wTGVmdFJhZGl1cyIsImJvcmRlclRvcFJpZ2h0UmFkaXVzIiwiYm9yZGVyVG9wU3RhcnRSYWRpdXMiLCJib3JkZXJUb3BFbmRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21TdGFydFJhZGl1cyIsImJvcmRlckJvdHRvbUVuZFJhZGl1cyIsImFuaW1hdGlvblN0eWxlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFTyxJQUFNQSxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUNDLElBQUQsRUFBd0Q7QUFDM0YsTUFBTUMsV0FBVyxHQUFHLGdEQUFxQixhQUFyQixFQUFvQyxDQUFwQyxFQUF1QyxLQUF2QyxFQUE4Q0QsSUFBOUMsQ0FBcEI7QUFDQSxNQUFNRSxXQUFXLEdBQUcsZ0RBQXFCLGFBQXJCLEVBQW9DLENBQXBDLEVBQXVDLEtBQXZDLEVBQThDRixJQUE5QyxDQUFwQjtBQUNBLE1BQU1HLGNBQWMsR0FBRyxnREFBcUIsZ0JBQXJCLEVBQXVDLENBQXZDLEVBQTBDLEtBQTFDLEVBQWlESCxJQUFqRCxDQUF2QjtBQUNBLE1BQU1JLGdCQUFnQixHQUFHLGdEQUFxQixrQkFBckIsRUFBeUMsQ0FBekMsRUFBNEMsS0FBNUMsRUFBbURKLElBQW5ELENBQXpCO0FBQ0EsTUFBTUssaUJBQWlCLEdBQUcsZ0RBQXFCLG1CQUFyQixFQUEwQyxDQUExQyxFQUE2QyxLQUE3QyxFQUFvREwsSUFBcEQsQ0FBMUI7QUFDQSxNQUFNTSxlQUFlLEdBQUcsZ0RBQXFCLGlCQUFyQixFQUF3QyxDQUF4QyxFQUEyQyxLQUEzQyxFQUFrRE4sSUFBbEQsQ0FBeEI7QUFDQSxNQUFNTyxnQkFBZ0IsR0FBRyxnREFBcUIsa0JBQXJCLEVBQXlDLENBQXpDLEVBQTRDLEtBQTVDLEVBQW1EUCxJQUFuRCxDQUF6QjtBQUNBLE1BQU1RLGNBQWMsR0FBRyxnREFBcUIsZ0JBQXJCLEVBQXVDLENBQXZDLEVBQTBDLEtBQTFDLEVBQWlEUixJQUFqRCxDQUF2QjtBQUNBLE1BQU1TLFlBQVksR0FBRyxnREFBcUIsY0FBckIsRUFBcUMsQ0FBckMsRUFBd0MsS0FBeEMsRUFBK0NULElBQS9DLENBQXJCO0FBQ0EsTUFBTVUsbUJBQW1CLEdBQUcsZ0RBQXFCLHFCQUFyQixFQUE0QyxDQUE1QyxFQUErQyxLQUEvQyxFQUFzRFYsSUFBdEQsQ0FBNUI7QUFDQSxNQUFNVyxvQkFBb0IsR0FBRyxnREFBcUIsc0JBQXJCLEVBQTZDLENBQTdDLEVBQWdELEtBQWhELEVBQXVEWCxJQUF2RCxDQUE3QjtBQUNBLE1BQU1ZLG9CQUFvQixHQUFHLGdEQUFxQixzQkFBckIsRUFBNkMsQ0FBN0MsRUFBZ0QsS0FBaEQsRUFBdURaLElBQXZELENBQTdCO0FBQ0EsTUFBTWEsa0JBQWtCLEdBQUcsZ0RBQXFCLG9CQUFyQixFQUEyQyxDQUEzQyxFQUE4QyxLQUE5QyxFQUFxRGIsSUFBckQsQ0FBM0I7QUFDQSxNQUFNYyxzQkFBc0IsR0FBRyxnREFBcUIsd0JBQXJCLEVBQStDLENBQS9DLEVBQWtELEtBQWxELEVBQXlEZCxJQUF6RCxDQUEvQjtBQUNBLE1BQU1lLHVCQUF1QixHQUFHLGdEQUFxQix5QkFBckIsRUFBZ0QsQ0FBaEQsRUFBbUQsS0FBbkQsRUFBMERmLElBQTFELENBQWhDO0FBQ0EsTUFBTWdCLHVCQUF1QixHQUFHLGdEQUFxQix5QkFBckIsRUFBZ0QsQ0FBaEQsRUFBbUQsS0FBbkQsRUFBMERoQixJQUExRCxDQUFoQztBQUNBLE1BQU1pQixxQkFBcUIsR0FBRyxnREFBcUIsdUJBQXJCLEVBQThDLENBQTlDLEVBQWlELEtBQWpELEVBQXdEakIsSUFBeEQsQ0FBOUI7QUFFQSxTQUFPO0FBQ0xrQixJQUFBQSxlQUFlLEVBQUU7QUFDZmpCLE1BQUFBLFdBQVcsRUFBWEEsV0FEZTtBQUVmQyxNQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZkMsTUFBQUEsY0FBYyxFQUFkQSxjQUhlO0FBSWZDLE1BQUFBLGdCQUFnQixFQUFoQkEsZ0JBSmU7QUFLZkMsTUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFMZTtBQU1mQyxNQUFBQSxlQUFlLEVBQWZBLGVBTmU7QUFPZkMsTUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFQZTtBQVFmQyxNQUFBQSxjQUFjLEVBQWRBLGNBUmU7QUFTZkMsTUFBQUEsWUFBWSxFQUFaQSxZQVRlO0FBVWZDLE1BQUFBLG1CQUFtQixFQUFuQkEsbUJBVmU7QUFXZkMsTUFBQUEsb0JBQW9CLEVBQXBCQSxvQkFYZTtBQVlmQyxNQUFBQSxvQkFBb0IsRUFBcEJBLG9CQVplO0FBYWZDLE1BQUFBLGtCQUFrQixFQUFsQkEsa0JBYmU7QUFjZkMsTUFBQUEsc0JBQXNCLEVBQXRCQSxzQkFkZTtBQWVmQyxNQUFBQSx1QkFBdUIsRUFBdkJBLHVCQWZlO0FBZ0JmQyxNQUFBQSx1QkFBdUIsRUFBdkJBLHVCQWhCZTtBQWlCZkMsTUFBQUEscUJBQXFCLEVBQXJCQTtBQWpCZTtBQURaLEdBQVA7QUFxQkQsQ0F4Q00iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IEludGVycG9sYXRvclNwZWNpZmljYXRpb24gfSBmcm9tICcuLi9UeXBlcy9JbnRlcnBvbGF0b3JTcGVjaWZpY2F0aW9uJztcbmltcG9ydCB7IGdldFN0eWxlSW50ZXJwb2xhdG9yIH0gZnJvbSAnLi9nZXRTdHlsZUludGVycG9sYXRvcic7XG5cbmV4cG9ydCBjb25zdCBnZXRCb3JkZXJJbnRlcnBvbGF0b3IgPSAoc3BlYzogSW50ZXJwb2xhdG9yU3BlY2lmaWNhdGlvbik6IFN0eWxlU2hlZXQuU3R5bGVzID0+IHtcbiAgY29uc3QgYm9yZGVyV2lkdGggPSBnZXRTdHlsZUludGVycG9sYXRvcignYm9yZGVyV2lkdGgnLCAwLCBmYWxzZSwgc3BlYyk7XG4gIGNvbnN0IGJvcmRlckNvbG9yID0gZ2V0U3R5bGVJbnRlcnBvbGF0b3IoJ2JvcmRlckNvbG9yJywgMCwgZmFsc2UsIHNwZWMpO1xuICBjb25zdCBib3JkZXJUb3BDb2xvciA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJUb3BDb2xvcicsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyUmlnaHRDb2xvciA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJSaWdodENvbG9yJywgMCwgZmFsc2UsIHNwZWMpO1xuICBjb25zdCBib3JkZXJCb3R0b21Db2xvciA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJCb3R0b21Db2xvcicsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyTGVmdENvbG9yID0gZ2V0U3R5bGVJbnRlcnBvbGF0b3IoJ2JvcmRlckxlZnRDb2xvcicsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyU3RhcnRDb2xvciA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJTdGFydENvbG9yJywgMCwgZmFsc2UsIHNwZWMpO1xuICBjb25zdCBib3JkZXJFbmRDb2xvciA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJFbmRDb2xvcicsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyUmFkaXVzID0gZ2V0U3R5bGVJbnRlcnBvbGF0b3IoJ2JvcmRlclJhZGl1cycsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyVG9wTGVmdFJhZGl1cyA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJUb3BMZWZ0UmFkaXVzJywgMCwgZmFsc2UsIHNwZWMpO1xuICBjb25zdCBib3JkZXJUb3BSaWdodFJhZGl1cyA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJUb3BSaWdodFJhZGl1cycsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyVG9wU3RhcnRSYWRpdXMgPSBnZXRTdHlsZUludGVycG9sYXRvcignYm9yZGVyVG9wU3RhcnRSYWRpdXMnLCAwLCBmYWxzZSwgc3BlYyk7XG4gIGNvbnN0IGJvcmRlclRvcEVuZFJhZGl1cyA9IGdldFN0eWxlSW50ZXJwb2xhdG9yKCdib3JkZXJUb3BFbmRSYWRpdXMnLCAwLCBmYWxzZSwgc3BlYyk7XG4gIGNvbnN0IGJvcmRlckJvdHRvbUxlZnRSYWRpdXMgPSBnZXRTdHlsZUludGVycG9sYXRvcignYm9yZGVyQm90dG9tTGVmdFJhZGl1cycsIDAsIGZhbHNlLCBzcGVjKTtcbiAgY29uc3QgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMgPSBnZXRTdHlsZUludGVycG9sYXRvcignYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMnLCAwLCBmYWxzZSwgc3BlYyk7XG4gIGNvbnN0IGJvcmRlckJvdHRvbVN0YXJ0UmFkaXVzID0gZ2V0U3R5bGVJbnRlcnBvbGF0b3IoJ2JvcmRlckJvdHRvbVN0YXJ0UmFkaXVzJywgMCwgZmFsc2UsIHNwZWMpO1xuICBjb25zdCBib3JkZXJCb3R0b21FbmRSYWRpdXMgPSBnZXRTdHlsZUludGVycG9sYXRvcignYm9yZGVyQm90dG9tRW5kUmFkaXVzJywgMCwgZmFsc2UsIHNwZWMpO1xuXG4gIHJldHVybiB7XG4gICAgYW5pbWF0aW9uU3R5bGVzOiB7XG4gICAgICBib3JkZXJXaWR0aCxcbiAgICAgIGJvcmRlckNvbG9yLFxuICAgICAgYm9yZGVyVG9wQ29sb3IsXG4gICAgICBib3JkZXJSaWdodENvbG9yLFxuICAgICAgYm9yZGVyQm90dG9tQ29sb3IsXG4gICAgICBib3JkZXJMZWZ0Q29sb3IsXG4gICAgICBib3JkZXJTdGFydENvbG9yLFxuICAgICAgYm9yZGVyRW5kQ29sb3IsXG4gICAgICBib3JkZXJSYWRpdXMsXG4gICAgICBib3JkZXJUb3BMZWZ0UmFkaXVzLFxuICAgICAgYm9yZGVyVG9wUmlnaHRSYWRpdXMsXG4gICAgICBib3JkZXJUb3BTdGFydFJhZGl1cyxcbiAgICAgIGJvcmRlclRvcEVuZFJhZGl1cyxcbiAgICAgIGJvcmRlckJvdHRvbUxlZnRSYWRpdXMsXG4gICAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1cyxcbiAgICAgIGJvcmRlckJvdHRvbVN0YXJ0UmFkaXVzLFxuICAgICAgYm9yZGVyQm90dG9tRW5kUmFkaXVzLFxuICAgIH0sXG4gIH07XG59O1xuIl19