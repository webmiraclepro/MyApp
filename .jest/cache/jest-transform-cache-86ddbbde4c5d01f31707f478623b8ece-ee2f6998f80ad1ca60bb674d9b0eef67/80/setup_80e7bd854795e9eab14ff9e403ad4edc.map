{"version":3,"sources":["setup.ts"],"names":["jest","mock","View","require","Swipeable","DrawerLayout","State","ScrollView","Slider","Switch","TextInput","ToolbarAndroid","ViewPagerAndroid","DrawerLayoutAndroid","WebView","NativeViewGestureHandler","TapGestureHandler","FlingGestureHandler","ForceTouchGestureHandler","LongPressGestureHandler","PanGestureHandler","PinchGestureHandler","RotationGestureHandler","RawButton","BaseButton","RectButton","BorderlessButton","FlatList","gestureHandlerRootHOC","fn","Directions"],"mappings":"AAAAA,IAAI,CAACC,IAAL,CAAU,8BAAV,EAA0C,YAAM;AAC9C,MAAMC,IAAI,GAAGC,OAAO,CAAC,6CAAD,CAApB;;AACA,SAAO;AACLC,IAAAA,SAAS,EAAEF,IADN;AAELG,IAAAA,YAAY,EAAEH,IAFT;AAGLI,IAAAA,KAAK,EAAE,EAHF;AAILC,IAAAA,UAAU,EAAEL,IAJP;AAKLM,IAAAA,MAAM,EAAEN,IALH;AAMLO,IAAAA,MAAM,EAAEP,IANH;AAOLQ,IAAAA,SAAS,EAAER,IAPN;AAQLS,IAAAA,cAAc,EAAET,IARX;AASLU,IAAAA,gBAAgB,EAAEV,IATb;AAULW,IAAAA,mBAAmB,EAAEX,IAVhB;AAWLY,IAAAA,OAAO,EAAEZ,IAXJ;AAYLa,IAAAA,wBAAwB,EAAEb,IAZrB;AAaLc,IAAAA,iBAAiB,EAAEd,IAbd;AAcLe,IAAAA,mBAAmB,EAAEf,IAdhB;AAeLgB,IAAAA,wBAAwB,EAAEhB,IAfrB;AAgBLiB,IAAAA,uBAAuB,EAAEjB,IAhBpB;AAiBLkB,IAAAA,iBAAiB,EAAElB,IAjBd;AAkBLmB,IAAAA,mBAAmB,EAAEnB,IAlBhB;AAmBLoB,IAAAA,sBAAsB,EAAEpB,IAnBnB;AAqBLqB,IAAAA,SAAS,EAAErB,IArBN;AAsBLsB,IAAAA,UAAU,EAAEtB,IAtBP;AAuBLuB,IAAAA,UAAU,EAAEvB,IAvBP;AAwBLwB,IAAAA,gBAAgB,EAAExB,IAxBb;AA0BLyB,IAAAA,QAAQ,EAAEzB,IA1BL;AA2BL0B,IAAAA,qBAAqB,EAAE5B,IAAI,CAAC6B,EAAL,EA3BlB;AA4BLC,IAAAA,UAAU,EAAE;AA5BP,GAAP;AA8BD,CAhCD","sourcesContent":["jest.mock('react-native-gesture-handler', () => {\n  const View = require('react-native/Libraries/Components/View/View')\n  return {\n    Swipeable: View,\n    DrawerLayout: View,\n    State: {},\n    ScrollView: View,\n    Slider: View,\n    Switch: View,\n    TextInput: View,\n    ToolbarAndroid: View,\n    ViewPagerAndroid: View,\n    DrawerLayoutAndroid: View,\n    WebView: View,\n    NativeViewGestureHandler: View,\n    TapGestureHandler: View,\n    FlingGestureHandler: View,\n    ForceTouchGestureHandler: View,\n    LongPressGestureHandler: View,\n    PanGestureHandler: View,\n    PinchGestureHandler: View,\n    RotationGestureHandler: View,\n    /* Buttons */\n    RawButton: View,\n    BaseButton: View,\n    RectButton: View,\n    BorderlessButton: View,\n    /* Other */\n    FlatList: View,\n    gestureHandlerRootHOC: jest.fn(),\n    Directions: {}\n  }\n})\n"]}