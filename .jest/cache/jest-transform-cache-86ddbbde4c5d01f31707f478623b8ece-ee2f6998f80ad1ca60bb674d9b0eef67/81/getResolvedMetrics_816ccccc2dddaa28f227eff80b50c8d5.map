{"version":3,"sources":["getResolvedMetrics.js"],"names":["getResolvedMetrics","item","metrics","style","getItemStyle","margins","getMarginsFromStyle","x","left","y","top","width","height","retVal","bottom","right","margin","marginHorizontal","marginVertical","marginTop","marginLeft","marginRight","marginBottom"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAuBC,OAAvB,EAAwC;AACxE,MAAMC,KAAK,GAAGF,IAAI,CAACG,YAAL,EAAd;AACA,MAAMC,OAAO,GAAGC,mBAAmB,CAACH,KAAD,CAAnC;;AACA,MAAIE,OAAJ,EAAa;AACX,WAAO;AACLE,MAAAA,CAAC,EAAEL,OAAO,CAACK,CAAR,GAAYF,OAAO,CAACG,IADlB;AAELC,MAAAA,CAAC,EAAEP,OAAO,CAACO,CAAR,GAAYJ,OAAO,CAACK,GAFlB;AAGLC,MAAAA,KAAK,EAAET,OAAO,CAACS,KAHV;AAILC,MAAAA,MAAM,EAAEV,OAAO,CAACU;AAJX,KAAP;AAMD;;AACD,SAAOV,OAAP;AACD,CAZM;;;;AAcP,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,KAAD,EAA6B;AACvD,MAAMU,MAAM,GAAG;AAAEL,IAAAA,IAAI,EAAE,CAAR;AAAWE,IAAAA,GAAG,EAAE,CAAhB;AAAmBI,IAAAA,MAAM,EAAE,CAA3B;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAAf;AACA,MAAI,CAACZ,KAAL,EAAY,OAAOU,MAAP;;AACZ,MAAIV,KAAK,CAACa,MAAV,EAAkB;AAChBH,IAAAA,MAAM,CAACL,IAAP,GAAcL,KAAK,CAACa,MAApB;AACAH,IAAAA,MAAM,CAACH,GAAP,GAAaP,KAAK,CAACa,MAAnB;AACAH,IAAAA,MAAM,CAACE,KAAP,GAAeZ,KAAK,CAACa,MAArB;AACAH,IAAAA,MAAM,CAACC,MAAP,GAAgBX,KAAK,CAACa,MAAtB;AACD;;AAED,MAAIb,KAAK,CAACc,gBAAV,EAA4B;AAC1BJ,IAAAA,MAAM,CAACL,IAAP,GAAcL,KAAK,CAACc,gBAApB;AACAJ,IAAAA,MAAM,CAACE,KAAP,GAAeZ,KAAK,CAACc,gBAArB;AACD;;AAED,MAAId,KAAK,CAACe,cAAV,EAA0B;AACxBL,IAAAA,MAAM,CAACH,GAAP,GAAaP,KAAK,CAACe,cAAnB;AACAL,IAAAA,MAAM,CAACC,MAAP,GAAgBX,KAAK,CAACe,cAAtB;AACD;;AAED,MAAIf,KAAK,CAACgB,SAAV,EAAqBN,MAAM,CAACH,GAAP,GAAaP,KAAK,CAACgB,SAAnB;AACrB,MAAIhB,KAAK,CAACiB,UAAV,EAAsBP,MAAM,CAACL,IAAP,GAAcL,KAAK,CAACiB,UAApB;AACtB,MAAIjB,KAAK,CAACkB,WAAV,EAAuBR,MAAM,CAACE,KAAP,GAAeZ,KAAK,CAACkB,WAArB;AACvB,MAAIlB,KAAK,CAACmB,YAAV,EAAwBT,MAAM,CAACC,MAAP,GAAgBX,KAAK,CAACmB,YAAtB;AAExB,SAAOT,MAAP;AACD,CA1BD","sourcesContent":["import { StyleSheet } from 'react-native';\nimport TransitionItem from '../TransitionItem';\n\nexport const getResolvedMetrics = (item: TransitionItem, metrics: any) => {\n  const style = item.getItemStyle();\n  const margins = getMarginsFromStyle(style);\n  if (margins) {\n    return {\n      x: metrics.x - margins.left,\n      y: metrics.y - margins.top,\n      width: metrics.width,\n      height: metrics.height,\n    };\n  }\n  return metrics;\n};\n\nconst getMarginsFromStyle = (style: StyleSheet.Style) => {\n  const retVal = { left: 0, top: 0, bottom: 0, right: 0 };\n  if (!style) return retVal;\n  if (style.margin) {\n    retVal.left = style.margin;\n    retVal.top = style.margin;\n    retVal.right = style.margin;\n    retVal.bottom = style.margin;\n  }\n\n  if (style.marginHorizontal) {\n    retVal.left = style.marginHorizontal;\n    retVal.right = style.marginHorizontal;\n  }\n\n  if (style.marginVertical) {\n    retVal.top = style.marginVertical;\n    retVal.bottom = style.marginVertical;\n  }\n\n  if (style.marginTop) retVal.top = style.marginTop;\n  if (style.marginLeft) retVal.left = style.marginLeft;\n  if (style.marginRight) retVal.right = style.marginRight;\n  if (style.marginBottom) retVal.bottom = style.marginBottom;\n\n  return retVal;\n};\n"]}