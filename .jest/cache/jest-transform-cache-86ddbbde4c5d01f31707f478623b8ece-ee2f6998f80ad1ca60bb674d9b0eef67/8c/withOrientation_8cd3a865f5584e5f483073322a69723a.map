{"version":3,"sources":["withOrientation.js"],"names":["isOrientationLandscape","width","height","WrappedComponent","withOrientation","handleOrientationChange","window","isLandscape","setState","Dimensions","get","state","addEventListener","removeEventListener","props","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,MAAV,QAAUA,MAAV;AAAA,SAAuBD,KAAK,GAAGC,MAA/B;AAAA,CAA/B;;;;AAEQ,kBAAUC,gBAAV,EAA4B;AAAA,MACnCC,eADmC;AAAA;;AAEvC,+BAAc;AAAA;;AAAA;AACZ;;AADY,YAedC,uBAfc,GAeY,iBAAgB;AAAA,YAAbC,MAAa,SAAbA,MAAa;AACxC,YAAMC,WAAW,GAAGP,sBAAsB,CAACM,MAAD,CAA1C;;AACA,cAAKE,QAAL,CAAc;AAAED,UAAAA,WAAW,EAAXA;AAAF,SAAd;AACD,OAlBa;;AAGZ,UAAMA,YAAW,GAAGP,sBAAsB,CAACS,wBAAWC,GAAX,CAAe,QAAf,CAAD,CAA1C;;AACA,YAAKC,KAAL,GAAa;AAAEJ,QAAAA,WAAW,EAAXA;AAAF,OAAb;AAJY;AAKb;;AAPsC;AAAA;AAAA,0CASnB;AAClBE,gCAAWG,gBAAX,CAA4B,QAA5B,EAAsC,KAAKP,uBAA3C;AACD;AAXsC;AAAA;AAAA,6CAahB;AACrBI,gCAAWI,mBAAX,CAA+B,QAA/B,EAAyC,KAAKR,uBAA9C;AACD;AAfsC;AAAA;AAAA,+BAsB9B;AACP,eAAO,6BAAC,gBAAD,6BAAsB,KAAKS,KAA3B,EAAsC,KAAKH,KAA3C,EAAP;AACD;AAxBsC;AAAA;AAAA,IACXI,eAAMC,SADK;;AA2BzC,SAAO,mCAAoBZ,eAApB,EAAqCD,gBAArC,CAAP;AACD","sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function (WrappedComponent) {\n  class withOrientation extends React.Component {\n    constructor() {\n      super();\n\n      const isLandscape = isOrientationLandscape(Dimensions.get('window'));\n      this.state = { isLandscape };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}"]}