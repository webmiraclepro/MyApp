{"version":3,"sources":["getSharedElements.js"],"names":["getSharedElements","sharedElements","getInterpolationFunction","map","pair","idx","fromItem","toItem","element","React","Children","only","reactElement","props","children","equalAspectRatio","getIsEqualAspectRatio","transitionStyles","getTransitionStyle","key","toString","animationStyle","styles","nativeAnimationStyle","nativeStyles","resolvedMetrics","metrics","overrideStyles","position","left","x","top","y","width","height","__index","index","animated","component","createElement","type","log","logPrefix","name","route","fromAspect","Math","round","toAspect","interpolatorInfo","from","boundingbox","boundingBoxMetrics","style","getFlattenedStyle","to","scaleX","scaleRelativeTo","scaleY","getInterpolation","dimensions","Dimensions","get","forEach","interpolator","interpolatorResult","interpolatorFunction","nativeAnimationStyles","push","animationStyles"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport TransitionItem from '../TransitionItem';\nimport { createAnimatedWrapper, getResolvedMetrics, mergeStyles } from '../Utils';\n\nimport { getInterpolatorTypes } from './InterpolatorTypes';\nimport { InterpolatorSpecification } from '../Types/InterpolatorSpecification';\n\nconst getSharedElements = (sharedElements: Array<any>,\n  getInterpolationFunction: Function) => sharedElements.map((pair, idx) => {\n  const { fromItem, toItem } = pair;\n  const element = React.Children.only(fromItem.reactElement.props.children);\n\n  const equalAspectRatio = getIsEqualAspectRatio(fromItem, toItem);\n\n  const transitionStyles = getTransitionStyle(fromItem, toItem, getInterpolationFunction,\n    equalAspectRatio);\n\n  const key = `so-${idx.toString()}`;\n  const animationStyle = transitionStyles.styles;\n  const nativeAnimationStyle = [transitionStyles.nativeStyles];\n  const resolvedMetrics = getResolvedMetrics(fromItem, fromItem.metrics);\n\n  const overrideStyles = {\n    position: 'absolute',\n    left: resolvedMetrics.x,\n    top: resolvedMetrics.y,\n    width: resolvedMetrics.width,\n    height: resolvedMetrics.height,\n  };\n\n  const props = { ...element.props, __index: fromItem.index };\n  if (fromItem.animated) {\n    props[fromItem.animated] = getInterpolationFunction(false);\n  } else if (toItem.animated) {\n    props[toItem.animated] = getInterpolationFunction(false);\n  }\n\n  const component = React.createElement(element.type, { ...props, key });\n\n  return createAnimatedWrapper({\n    component,\n    nativeStyles: nativeAnimationStyle,\n    styles: animationStyle,\n    overrideStyles,\n    equalAspectRatio,\n    log: true,\n    logPrefix: `SE: ${fromItem.name}/${fromItem.route}`,\n  });\n});\n\nconst getIsEqualAspectRatio = (fromItem, toItem) => {\n  const fromAspect = Math.round((fromItem.metrics.width / fromItem.metrics.height) * 100) / 100;\n  const toAspect = Math.round((toItem.metrics.width / toItem.metrics.height) * 100) / 100;\n  return fromAspect === toAspect;\n};\n\nconst getTransitionStyle = (\n  fromItem: TransitionItem, toItem: TransitionItem, getInterpolationFunction: Function,\n  equalAspectRatio: boolean,\n) => {\n  const interpolatorInfo: InterpolatorSpecification = {\n    from: {\n      metrics: fromItem.metrics,\n      boundingbox: fromItem.boundingBoxMetrics,\n      style: fromItem.getFlattenedStyle(),\n    },\n    to: {\n      metrics: toItem.metrics,\n      style: toItem.getFlattenedStyle(),\n      boundingbox: toItem.boundingBoxMetrics,\n    },\n    scaleX: toItem.scaleRelativeTo(fromItem).x,\n    scaleY: toItem.scaleRelativeTo(fromItem).y,\n    equalAspectRatio,\n    getInterpolation: getInterpolationFunction,\n    dimensions: Dimensions.get('window'),\n  };\n\n  const nativeStyles = [];\n  const styles = [];\n\n  getInterpolatorTypes().forEach(interpolator => {\n    const interpolatorResult = interpolator.interpolatorFunction(interpolatorInfo);\n    if (interpolatorResult) {\n      if (interpolatorResult.nativeAnimationStyles) {\n        nativeStyles.push(interpolatorResult.nativeAnimationStyles);\n      }\n      if (interpolatorResult.animationStyles) {\n        styles.push(interpolatorResult.animationStyles);\n      }\n    }\n  });\n\n  return {\n    nativeStyles: {\n      ...mergeStyles(nativeStyles),\n    },\n    styles: {\n      width: fromItem.metrics.width,\n      height: fromItem.metrics.height,\n      ...mergeStyles(styles),\n    },\n  };\n};\n\nexport { getSharedElements };\n"]}