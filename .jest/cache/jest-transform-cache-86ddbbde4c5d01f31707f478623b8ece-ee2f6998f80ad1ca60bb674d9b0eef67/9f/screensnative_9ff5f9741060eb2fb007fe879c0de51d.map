{"version":3,"sources":["screens.native.js"],"names":["USE_SCREENS","getViewManagerConfigCompat","name","UIManager","getViewManagerConfig","useScreens","shouldUseScreens","console","error","screensEnabled","NativeScreen","AnimatedNativeScreen","Animated","createAnimatedComponent","NativeScreenContainer","Screen","setRef","ref","_ref","props","onComponentRef","setNativeProps","active","version","minor","style","children","rest","StyleSheet","absoluteFill","React","Component","ScreenContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAOA;;AAEA,IAAIA,WAAW,GAAG,KAAlB;;AAIA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,IAAI;AAAA,SACrC,OAAOC,uBAAUC,oBAAjB,KAA0C,WAA1C,GACID,uBAAUC,oBAAV,CAA+BF,IAA/B,CADJ,GAEIC,uBAAUD,IAAV,CAHiC;AAAA,CAAvC;;AAKO,SAASG,UAAT,GAA6C;AAAA,MAAzBC,gBAAyB,uEAAN,IAAM;AAClDN,EAAAA,WAAW,GAAGM,gBAAd;;AACA,MAAIN,WAAW,IAAI,CAACC,0BAA0B,CAAC,WAAD,CAA9C,EAA6D;AAC3DM,IAAAA,OAAO,CAACC,KAAR;AAGD;AACF;;AAEM,SAASC,cAAT,GAA0B;AAC/B,SAAOT,WAAP;AACD;;AAEM,IAAMU,YAAY,GAAG,yCAAuB,WAAvB,EAAoC,IAApC,CAArB;;;AAEP,IAAMC,oBAAoB,GAAGC,sBAASC,uBAAT,CAAiCH,YAAjC,CAA7B;;AAEO,IAAMI,qBAAqB,GAAG,yCACnC,oBADmC,EAEnC,IAFmC,CAA9B;;;IAKMC,M;;;;;;;;;;;;;;;;UAIXC,M,GAAS,UAAAC,GAAG,EAAI;AACd,YAAKC,IAAL,GAAYD,GAAZ;AACA,YAAKE,KAAL,CAAWC,cAAX,IAA6B,MAAKD,KAAL,CAAWC,cAAX,CAA0BH,GAA1B,CAA7B;AACD,K;;;;;;;mCANcE,K,EAAO;AACpB,WAAKD,IAAL,CAAUG,cAAV,CAAyBF,KAAzB;AACD;;;6BAKQ;AACP,UAAI,CAACnB,WAAL,EAAkB;AAAA,0BAM6B,KAAKmB,KANlC;AAAA,YAMRG,MANQ,eAMRA,MANQ;AAAA,YAMAF,cANA,eAMAA,cANA;AAAA,YAMmBD,KANnB;AAQhB,eAAO,6BAAC,qBAAD,CAAU,IAAV,6BAAmBA,KAAnB;AAA0B,UAAA,GAAG,EAAE,KAAKH;AAApC,WAAP;AACD,OATD,MASO,IAAIO,4BAAQC,KAAR,IAAiB,EAArB,EAAyB;AAC9B,eAAO,6BAAC,oBAAD,EAA0B,KAAKL,KAA/B,CAAP;AACD,OAFM,MAEA;AAAA,2BAKgC,KAAKA,KALrC;AAAA,YAKGM,KALH,gBAKGA,KALH;AAAA,YAKUC,QALV,gBAKUA,QALV;AAAA,YAKuBC,IALvB;AAML,eACE,6BAAC,oBAAD,6BACMA,IADN;AAEE,UAAA,GAAG,EAAE,KAAKX,MAFZ;AAGE,UAAA,KAAK,EAAEY,wBAAWC;AAHpB,YAIE,6BAAC,qBAAD,CAAU,IAAV;AAAe,UAAA,KAAK,EAAEJ;AAAtB,WAA8BC,QAA9B,CAJF,CADF;AAQD;AACF;;;EAnCyBI,eAAMC,S;;;;IAsCrBC,e;;;;;;;;;;6BACF;AACP,UAAI,CAAChC,WAAL,EAAkB;AAChB,eAAO,6BAAC,iBAAD,EAAU,KAAKmB,KAAf,CAAP;AACD,OAFD,MAEO;AACL,eAAO,6BAAC,qBAAD,EAA2B,KAAKA,KAAhC,CAAP;AACD;AACF;;;EAPkCW,eAAMC,S","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  requireNativeComponent,\n  View,\n  UIManager,\n  StyleSheet,\n} from 'react-native';\nimport { version } from 'react-native/Libraries/Core/ReactNativeVersion';\n\nlet USE_SCREENS = false;\n\n// UIManager[`${moduleName}`] is deprecated in RN 0.58 and `getViewManagerConfig` is added.\n// We can remove this when we drop support for RN < 0.58.\nconst getViewManagerConfigCompat = name =>\n  typeof UIManager.getViewManagerConfig !== 'undefined'\n    ? UIManager.getViewManagerConfig(name)\n    : UIManager[name];\n\nexport function useScreens(shouldUseScreens = true) {\n  USE_SCREENS = shouldUseScreens;\n  if (USE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nexport function screensEnabled() {\n  return USE_SCREENS;\n}\n\nexport const NativeScreen = requireNativeComponent('RNSScreen', null);\n\nconst AnimatedNativeScreen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const NativeScreenContainer = requireNativeComponent(\n  'RNSScreenContainer',\n  null\n);\n\nexport class Screen extends React.Component {\n  setNativeProps(props) {\n    this._ref.setNativeProps(props);\n  }\n  setRef = ref => {\n    this._ref = ref;\n    this.props.onComponentRef && this.props.onComponentRef(ref);\n  };\n  render() {\n    if (!USE_SCREENS) {\n      // Filter out active prop in this case because it is unused and\n      // can cause problems depending on react-native version:\n      // https://github.com/react-navigation/react-navigation/issues/4886\n\n      /* eslint-disable no-unused-vars */\n      const { active, onComponentRef, ...props } = this.props;\n\n      return <Animated.View {...props} ref={this.setRef} />;\n    } else if (version.minor >= 57) {\n      return <AnimatedNativeScreen {...this.props} />;\n    } else {\n      // On RN version below 0.57 we need to wrap screen's children with an\n      // additional View because of a bug fixed in react-native/pull/20658 which\n      // was preventing a view from having both styles and some other props being\n      // \"animated\" (using Animated native driver)\n      const { style, children, ...rest } = this.props;\n      return (\n        <AnimatedNativeScreen\n          {...rest}\n          ref={this.setRef}\n          style={StyleSheet.absoluteFill}>\n          <Animated.View style={style}>{children}</Animated.View>\n        </AnimatedNativeScreen>\n      );\n    }\n  }\n}\n\nexport class ScreenContainer extends React.Component {\n  render() {\n    if (!USE_SCREENS) {\n      return <View {...this.props} />;\n    } else {\n      return <NativeScreenContainer {...this.props} />;\n    }\n  }\n}\n"]}