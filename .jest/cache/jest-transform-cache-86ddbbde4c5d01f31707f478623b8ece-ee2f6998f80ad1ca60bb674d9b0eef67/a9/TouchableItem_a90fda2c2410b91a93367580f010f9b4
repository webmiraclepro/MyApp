21ece812934ecc2055c1d66d5a15a372
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _BorderlessButton = _interopRequireDefault(require("./BorderlessButton"));

var _jsxFileName = "/Users/brentvatne/coding/react-navigation-stack/src/views/TouchableItem.tsx";
var ANDROID_VERSION_LOLLIPOP = 21;

var TouchableItem = function (_React$Component) {
  (0, _inherits2.default)(TouchableItem, _React$Component);

  function TouchableItem() {
    (0, _classCallCheck2.default)(this, TouchableItem);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableItem).apply(this, arguments));
  }

  (0, _createClass2.default)(TouchableItem, [{
    key: "render",
    value: function render() {
      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
        var _this$props = this.props,
            style = _this$props.style,
            rest = (0, _objectWithoutProperties2.default)(_this$props, ["style"]);
        return React.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, rest, {
          style: null,
          background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 52
          }
        }), React.createElement(_reactNative.View, {
          style: style,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 60
          }
        }, React.Children.only(this.props.children)));
      } else if (_reactNative.Platform.OS === 'ios') {
        return React.createElement(_BorderlessButton.default, (0, _extends2.default)({
          hitSlop: {
            top: 10,
            bottom: 10,
            right: 10,
            left: 10
          },
          disallowInterruption: true,
          enabled: !this.props.disabled
        }, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 65
          }
        }), this.props.children);
      } else {
        return React.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 76
          }
        }), this.props.children);
      }
    }
  }]);
  return TouchableItem;
}(React.Component);

exports.default = TouchableItem;
TouchableItem.defaultProps = {
  borderless: false,
  pressColor: 'rgba(0, 0, 0, .32)'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvdWNoYWJsZUl0ZW0udHN4Il0sIm5hbWVzIjpbIkFORFJPSURfVkVSU0lPTl9MT0xMSVBPUCIsIlRvdWNoYWJsZUl0ZW0iLCJSZWFjdCIsIkNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsImJvcmRlcmxlc3MiLCJwcmVzc0NvbG9yIiwiUGxhdGZvcm0iLCJzdHlsZSIsInJlc3QiLCJUb3VjaGFibGVOYXRpdmVGZWVkYmFjayIsInRvcCIsImJvdHRvbSIsInJpZ2h0IiwibGVmdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQVFBLElBQUEsaUJBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUE7OztBQVVBLElBQU1BLHdCQUF3QixHQUE5QixFQUFBOztBQUVxQkMsSUFBQUEsYTs7Ozs7Ozs7Ozs2QkFNVjtBQVNQLFVBQ0VNLFlBQUFBLENBQUFBLFFBQUFBLENBQUFBLEVBQUFBLEtBQUFBLFNBQUFBLElBQ0FBLFlBQUFBLENBQUFBLFFBQUFBLENBQUFBLE9BQUFBLElBRkYsd0JBQUEsRUFHRTtBQUFBLFlBQUEsV0FBQSxHQUMyQixLQUQzQixLQUFBO0FBQUEsWUFDUUMsS0FEUixHQUFBLFdBQUEsQ0FBQSxLQUFBO0FBQUEsWUFDa0JDLElBRGxCLEdBQUEsQ0FBQSxHQUFBLHlCQUFBLENBQUEsT0FBQSxFQUFBLFdBQUEsRUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBO0FBRUEsZUFDRSxLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCx1QkFBQSxFQUFBLENBQUEsR0FBQSxTQUFBLENBQUEsT0FBQSxFQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUE7QUFFRSxVQUFBLEtBQUssRUFGUCxJQUFBO0FBR0UsVUFBQSxVQUFVLEVBQUVDLFlBQUFBLENBQUFBLHVCQUFBQSxDQUFBQSxNQUFBQSxDQUNWLEtBQUEsS0FBQSxDQURVQSxVQUFBQSxFQUVWLEtBQUEsS0FBQSxDQUxKLFVBR2NBLENBSGQ7QUFBQSxVQUFBLFFBQUEsRUFBQTtBQUFBLFlBQUEsUUFBQSxFQUFBLFlBQUE7QUFBQSxZQUFBLFVBQUEsRUFBQTtBQUFBO0FBQUEsU0FBQSxDQUFBLEVBUUUsS0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUQsSUFBQSxFQUFBO0FBQU0sVUFBQSxLQUFLLEVBQVgsS0FBQTtBQUFBLFVBQUEsUUFBQSxFQUFBO0FBQUEsWUFBQSxRQUFBLEVBQUEsWUFBQTtBQUFBLFlBQUEsVUFBQSxFQUFBO0FBQUE7QUFBQSxTQUFBLEVBQXFCUixLQUFLLENBQUxBLFFBQUFBLENBQUFBLElBQUFBLENBQW9CLEtBQUEsS0FBQSxDQVQ3QyxRQVN5QkEsQ0FBckIsQ0FSRixDQURGO0FBTEYsT0FBQSxNQWlCTyxJQUFJSyxZQUFBQSxDQUFBQSxRQUFBQSxDQUFBQSxFQUFBQSxLQUFKLEtBQUEsRUFBMkI7QUFDaEMsZUFDRSxLQUFBLENBQUEsYUFBQSxDQUFDLGlCQUFBLENBQUQsT0FBQSxFQUFBLENBQUEsR0FBQSxTQUFBLENBQUEsT0FBQSxFQUFBO0FBQ0UsVUFBQSxPQUFPLEVBQUU7QUFBRUksWUFBQUEsR0FBRyxFQUFMLEVBQUE7QUFBV0MsWUFBQUEsTUFBTSxFQUFqQixFQUFBO0FBQXVCQyxZQUFBQSxLQUFLLEVBQTVCLEVBQUE7QUFBa0NDLFlBQUFBLElBQUksRUFEakQ7QUFDVyxXQURYO0FBRUUsVUFBQSxvQkFBb0IsRUFGdEIsSUFBQTtBQUdFLFVBQUEsT0FBTyxFQUFFLENBQUMsS0FBQSxLQUFBLENBSFo7QUFBQSxTQUFBLEVBSU0sS0FKTixLQUFBLEVBQUE7QUFBQSxVQUFBLFFBQUEsRUFBQTtBQUFBLFlBQUEsUUFBQSxFQUFBLFlBQUE7QUFBQSxZQUFBLFVBQUEsRUFBQTtBQUFBO0FBQUEsU0FBQSxDQUFBLEVBTUcsS0FBQSxLQUFBLENBUEwsUUFDRSxDQURGO0FBREssT0FBQSxNQVdBO0FBQ0wsZUFDRSxLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxnQkFBQSxFQUFBLENBQUEsR0FBQSxTQUFBLENBQUEsT0FBQSxFQUFBLEVBQUEsRUFBc0IsS0FBdEIsS0FBQSxFQUFBO0FBQUEsVUFBQSxRQUFBLEVBQUE7QUFBQSxZQUFBLFFBQUEsRUFBQSxZQUFBO0FBQUEsWUFBQSxVQUFBLEVBQUE7QUFBQTtBQUFBLFNBQUEsQ0FBQSxFQUNHLEtBQUEsS0FBQSxDQUZMLFFBQ0UsQ0FERjtBQU1IOzs7O0VBbER3Q1osS0FBSyxDQUFDQyxTLENBQTVCRjs7O0FBQUFBLGEsQ0FDWkcsWUFEWUgsR0FDRztBQUNwQkksRUFBQUEsVUFBVSxFQURVLEtBQUE7QUFFcEJDLEVBQUFBLFVBQVUsRUFGVTtBQUFBLENBREhMIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUb3VjaGFibGVJdGVtIHJlbmRlcnMgYSB0b3VjaGFibGUgdGhhdCBsb29rcyBuYXRpdmUgb24gYm90aCBpT1MgYW5kIEFuZHJvaWQuXG4gKlxuICogSXQgcHJvdmlkZXMgYW4gYWJzdHJhY3Rpb24gb24gdG9wIG9mIFRvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrIGFuZFxuICogVG91Y2hhYmxlT3BhY2l0eS5cbiAqXG4gKiBPbiBpT1MgeW91IGNhbiBwYXNzIHRoZSBwcm9wcyBvZiBUb3VjaGFibGVPcGFjaXR5LCBvbiBBbmRyb2lkIHBhc3MgdGhlIHByb3BzXG4gKiBvZiBUb3VjaGFibGVOYXRpdmVGZWVkYmFjay5cbiAqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgUGxhdGZvcm0sXG4gIFRvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrLFxuICBUb3VjaGFibGVPcGFjaXR5LFxuICBWaWV3LFxuICBWaWV3UHJvcHMsXG59IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCBCb3JkZXJsZXNzQnV0dG9uIGZyb20gJy4vQm9yZGVybGVzc0J1dHRvbic7XG5cbnR5cGUgUHJvcHMgPSBWaWV3UHJvcHMgJiB7XG4gIHByZXNzQ29sb3I6IHN0cmluZztcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBib3JkZXJsZXNzPzogYm9vbGVhbjtcbiAgZGVsYXlQcmVzc0luPzogbnVtYmVyO1xuICBvblByZXNzPzogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IEFORFJPSURfVkVSU0lPTl9MT0xMSVBPUCA9IDIxO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb3VjaGFibGVJdGVtIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzPiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgYm9yZGVybGVzczogZmFsc2UsXG4gICAgcHJlc3NDb2xvcjogJ3JnYmEoMCwgMCwgMCwgLjMyKScsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIC8qXG4gICAgICogVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2suUmlwcGxlIGNhdXNlcyBhIGNyYXNoIG9uIG9sZCBBbmRyb2lkIHZlcnNpb25zLFxuICAgICAqIHRoZXJlZm9yZSBvbmx5IGVuYWJsZSBpdCBvbiBBbmRyb2lkIExvbGxpcG9wIGFuZCBhYm92ZS5cbiAgICAgKlxuICAgICAqIEFsbCB0b3VjaGFibGVzIG9uIEFuZHJvaWQgc2hvdWxkIGhhdmUgdGhlIHJpcHBsZSBlZmZlY3QgYWNjb3JkaW5nIHRvXG4gICAgICogcGxhdGZvcm0gZGVzaWduIGd1aWRlbGluZXMuXG4gICAgICogV2UgbmVlZCB0byBwYXNzIHRoZSBiYWNrZ3JvdW5kIHByb3AgdG8gc3BlY2lmeSBhIGJvcmRlcmxlc3MgcmlwcGxlIGVmZmVjdC5cbiAgICAgKi9cbiAgICBpZiAoXG4gICAgICBQbGF0Zm9ybS5PUyA9PT0gJ2FuZHJvaWQnICYmXG4gICAgICBQbGF0Zm9ybS5WZXJzaW9uID49IEFORFJPSURfVkVSU0lPTl9MT0xMSVBPUFxuICAgICkge1xuICAgICAgY29uc3QgeyBzdHlsZSwgLi4ucmVzdCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxUb3VjaGFibGVOYXRpdmVGZWVkYmFja1xuICAgICAgICAgIHsuLi5yZXN0fVxuICAgICAgICAgIHN0eWxlPXtudWxsfVxuICAgICAgICAgIGJhY2tncm91bmQ9e1RvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrLlJpcHBsZShcbiAgICAgICAgICAgIHRoaXMucHJvcHMucHJlc3NDb2xvcixcbiAgICAgICAgICAgIHRoaXMucHJvcHMuYm9yZGVybGVzc1xuICAgICAgICAgICl9XG4gICAgICAgID5cbiAgICAgICAgICA8VmlldyBzdHlsZT17c3R5bGV9PntSZWFjdC5DaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pfTwvVmlldz5cbiAgICAgICAgPC9Ub3VjaGFibGVOYXRpdmVGZWVkYmFjaz5cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChQbGF0Zm9ybS5PUyA9PT0gJ2lvcycpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxCb3JkZXJsZXNzQnV0dG9uXG4gICAgICAgICAgaGl0U2xvcD17eyB0b3A6IDEwLCBib3R0b206IDEwLCByaWdodDogMTAsIGxlZnQ6IDEwIH19XG4gICAgICAgICAgZGlzYWxsb3dJbnRlcnJ1cHRpb25cbiAgICAgICAgICBlbmFibGVkPXshdGhpcy5wcm9wcy5kaXNhYmxlZH1cbiAgICAgICAgICB7Li4udGhpcy5wcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICA8L0JvcmRlcmxlc3NCdXR0b24+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8VG91Y2hhYmxlT3BhY2l0eSB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iXX0=