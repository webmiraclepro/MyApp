{"version":3,"sources":["index.js"],"names":["X_WIDTH","X_HEIGHT","XSMAX_WIDTH","XSMAX_HEIGHT","PAD_WIDTH","PAD_HEIGHT","IPADPRO11_WIDTH","IPADPRO11_HEIGHT","IPADPRO129_HEIGHT","IPADPRO129_WIDTH","getResolvedDimensions","Dimensions","get","width","height","D_HEIGHT","D_WIDTH","NativeModules","PlatformConstants","reactNativeVersion","minor","isIPhoneX","Platform","OS","isNewIPadPro","isIPad","_customStatusBarHeight","_customStatusBarHidden","statusBarHeight","isLandscape","global","Expo","Constants","doubleFromPercentString","percent","includes","dbl","parseFloat","isNaN","SafeView","state","touchesTop","touchesBottom","touchesLeft","touchesRight","orientation","viewWidth","viewHeight","_onLayout","args","_isMounted","view","props","newOrientation","WIDTH","HEIGHT","getNode","measureInWindow","winX","winY","winWidth","winHeight","realY","realX","setState","onLayout","_getSafeAreaStyle","forceInset","_getViewStyles","paddingTop","paddingBottom","paddingLeft","paddingRight","viewStyle","style","_getInset","Object","keys","forEach","key","inset","padding","toUpperCase","slice","Math","max","StyleSheet","flatten","paddingVertical","paddingHorizontal","getInset","InteractionManager","runAfterInteractions","safeAreaStyle","c","Component","setStatusBarHeight","setStatusBarHidden","hidden","getStatusBarHeight","SafeAreaView","withSafeArea","WrappedComponent","flex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Dimensions,\n  InteractionManager,\n  NativeModules,\n  Platform,\n  StyleSheet,\n  Animated,\n} from 'react-native';\nimport hoistStatics from 'hoist-non-react-statics';\n\nimport withOrientation from './withOrientation';\n\n// See https://mydevice.io/devices/ for device dimensions\nconst X_WIDTH = 375;\nconst X_HEIGHT = 812;\nconst XSMAX_WIDTH = 414;\nconst XSMAX_HEIGHT = 896;\nconst PAD_WIDTH = 768;\nconst PAD_HEIGHT = 1024;\nconst IPADPRO11_WIDTH = 834;\nconst IPADPRO11_HEIGHT = 1194;\nconst IPADPRO129_HEIGHT = 1024;\nconst IPADPRO129_WIDTH = 1366;\n\nconst getResolvedDimensions = () => {\n  const { width, height } = Dimensions.get('window');\n  if (width === 0 && height === 0) return Dimensions.get('screen');\n  return { width, height };\n};\n\nconst { height: D_HEIGHT, width: D_WIDTH } = getResolvedDimensions();\n\nconst { PlatformConstants = {} } = NativeModules;\nconst { minor = 0 } = PlatformConstants.reactNativeVersion || {};\n\nconst isIPhoneX = (() => {\n  if (Platform.OS === 'web') return false;\n\n  return (\n    (Platform.OS === 'ios' &&\n      ((D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH) ||\n        (D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT))) ||\n    ((D_HEIGHT === XSMAX_HEIGHT && D_WIDTH === XSMAX_WIDTH) ||\n      (D_HEIGHT === XSMAX_WIDTH && D_WIDTH === XSMAX_HEIGHT))\n  );\n})();\n\nconst isNewIPadPro = (() => {\n  if (Platform.OS !== 'ios') return false;\n\n  return (\n    (D_HEIGHT === IPADPRO11_HEIGHT && D_WIDTH === IPADPRO11_WIDTH) ||\n    (D_HEIGHT === IPADPRO11_WIDTH && D_WIDTH === IPADPRO11_HEIGHT) ||\n    ((D_HEIGHT === IPADPRO129_HEIGHT && D_WIDTH === IPADPRO129_WIDTH) ||\n      (D_HEIGHT === IPADPRO129_WIDTH && D_WIDTH === IPADPRO129_HEIGHT))\n  );\n})();\n\nconst isIPad = (() => {\n  if (Platform.OS !== 'ios' || isIPhoneX) return false;\n\n  // if portrait and width is smaller than iPad width\n  if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {\n    return false;\n  }\n\n  // if landscape and height is smaller that iPad height\n  if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {\n    return false;\n  }\n\n  return true;\n})();\n\nlet _customStatusBarHeight = null;\nlet _customStatusBarHidden = null;\nconst statusBarHeight = isLandscape => {\n  if (_customStatusBarHeight !== null) {\n    return _customStatusBarHeight;\n  }\n\n  /**\n   * This is a temporary workaround because we don't have a way to detect\n   * if the status bar is translucent or opaque. If opaque, we don't need to\n   * factor in the height here; if translucent (content renders under it) then\n   * we do.\n   */\n  if (Platform.OS === 'android') {\n    if (global.Expo) {\n      return global.Expo.Constants.statusBarHeight;\n    } else {\n      return 0;\n    }\n  }\n\n  if (isIPhoneX) {\n    return isLandscape ? 0 : 44;\n  }\n\n  if (isNewIPadPro) {\n    return 24;\n  }\n\n  if (isIPad) {\n    return _customStatusBarHidden ? 0 : 20;\n  }\n\n  return (isLandscape || _customStatusBarHidden) ? 0 : 20;\n};\n\nconst doubleFromPercentString = percent => {\n  if (!percent.includes('%')) {\n    return 0;\n  }\n\n  const dbl = parseFloat(percent) / 100;\n\n  if (isNaN(dbl)) return 0;\n\n  return dbl;\n};\n\nclass SafeView extends Component {\n  static setStatusBarHeight = height => {\n    _customStatusBarHeight = height;\n  };\n\n  static setStatusBarHidden = hidden => {\n    _customStatusBarHidden = hidden;\n  };\n\n  state = {\n    touchesTop: true,\n    touchesBottom: true,\n    touchesLeft: true,\n    touchesRight: true,\n    orientation: null,\n    viewWidth: 0,\n    viewHeight: 0,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    InteractionManager.runAfterInteractions(() => {\n      this._onLayout();\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate() {\n    this._onLayout();\n  }\n\n  render() {\n    const { forceInset = false, isLandscape, style, ...props } = this.props;\n\n    const safeAreaStyle = this._getSafeAreaStyle();\n\n    return (\n      <Animated.View\n        ref={c => (this.view = c)}\n        pointerEvents=\"box-none\"\n        {...props}\n        onLayout={this._onLayout}\n        style={safeAreaStyle}\n      />\n    );\n  }\n\n  _onLayout = (...args) => {\n    if (!this._isMounted) return;\n    if (!this.view) return;\n\n    const { isLandscape } = this.props;\n    const { orientation } = this.state;\n    const newOrientation = isLandscape ? 'landscape' : 'portrait';\n    if (orientation && orientation === newOrientation) {\n      return;\n    }\n\n    const { width: WIDTH, height: HEIGHT } = getResolvedDimensions();\n\n    this.view.getNode().measureInWindow((winX, winY, winWidth, winHeight) => {\n      if (!this.view) {\n        return;\n      }\n      let realY = winY;\n      let realX = winX;\n\n      if (realY >= HEIGHT) {\n        realY = realY % HEIGHT;\n      } else if (realY < 0) {\n        realY = (realY % HEIGHT) + HEIGHT;\n      }\n\n      if (realX >= WIDTH) {\n        realX = realX % WIDTH;\n      } else if (realX < 0) {\n        realX = (realX % WIDTH) + WIDTH;\n      }\n\n      const touchesTop = realY === 0;\n      const touchesBottom = realY + winHeight >= HEIGHT;\n      const touchesLeft = realX === 0;\n      const touchesRight = realX + winWidth >= WIDTH;\n\n      this.setState({\n        touchesTop,\n        touchesBottom,\n        touchesLeft,\n        touchesRight,\n        orientation: newOrientation,\n        viewWidth: winWidth,\n        viewHeight: winHeight,\n      });\n\n      if (this.props.onLayout) this.props.onLayout(...args);\n    });\n  };\n\n  _getSafeAreaStyle = () => {\n    const { touchesTop, touchesBottom, touchesLeft, touchesRight } = this.state;\n    const { forceInset, isLandscape } = this.props;\n\n    const {\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n      viewStyle,\n    } = this._getViewStyles();\n\n    const style = {\n      ...viewStyle,\n      paddingTop: touchesTop ? this._getInset('top') : 0,\n      paddingBottom: touchesBottom ? this._getInset('bottom') : 0,\n      paddingLeft: touchesLeft ? this._getInset('left') : 0,\n      paddingRight: touchesRight ? this._getInset('right') : 0,\n    };\n\n    if (forceInset) {\n      Object.keys(forceInset).forEach(key => {\n        let inset = forceInset[key];\n\n        if (inset === 'always') {\n          inset = this._getInset(key);\n        }\n\n        if (inset === 'never') {\n          inset = 0;\n        }\n\n        switch (key) {\n          case 'horizontal': {\n            style.paddingLeft = inset;\n            style.paddingRight = inset;\n            break;\n          }\n          case 'vertical': {\n            style.paddingTop = inset;\n            style.paddingBottom = inset;\n            break;\n          }\n          case 'left':\n          case 'right':\n          case 'top':\n          case 'bottom': {\n            const padding = `padding${key[0].toUpperCase()}${key.slice(1)}`;\n            style[padding] = inset;\n            break;\n          }\n        }\n      });\n    }\n\n    // new height/width should only include padding from insets\n    // height/width should not be affected by padding from style obj\n    if (style.height && typeof style.height === 'number') {\n      style.height += style.paddingTop + style.paddingBottom;\n    }\n\n    if (style.width && typeof style.width === 'number') {\n      style.width += style.paddingLeft + style.paddingRight;\n    }\n\n    style.paddingTop = Math.max(style.paddingTop, paddingTop);\n    style.paddingBottom = Math.max(style.paddingBottom, paddingBottom);\n    style.paddingLeft = Math.max(style.paddingLeft, paddingLeft);\n    style.paddingRight = Math.max(style.paddingRight, paddingRight);\n\n    return style;\n  };\n\n  _getViewStyles = () => {\n    const { viewWidth } = this.state;\n    // get padding values from style to add back in after insets are determined\n    // default precedence: padding[Side] -> vertical | horizontal -> padding -> 0\n    let {\n      padding = 0,\n      paddingVertical = padding,\n      paddingHorizontal = padding,\n      paddingTop = paddingVertical,\n      paddingBottom = paddingVertical,\n      paddingLeft = paddingHorizontal,\n      paddingRight = paddingHorizontal,\n      ...viewStyle\n    } = StyleSheet.flatten(this.props.style || {});\n\n    if (typeof paddingTop !== 'number') {\n      paddingTop = doubleFromPercentString(paddingTop) * viewWidth;\n    }\n\n    if (typeof paddingBottom !== 'number') {\n      paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;\n    }\n\n    if (typeof paddingLeft !== 'number') {\n      paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;\n    }\n\n    if (typeof paddingRight !== 'number') {\n      paddingRight = doubleFromPercentString(paddingRight) * viewWidth;\n    }\n\n    return {\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n      viewStyle,\n    };\n  };\n\n  _getInset = key => {\n    const { isLandscape } = this.props;\n    return getInset(key, isLandscape);\n  };\n}\n\nexport function getInset(key, isLandscape) {\n  switch (key) {\n    case 'horizontal':\n    case 'right':\n    case 'left': {\n      return isLandscape ? (isIPhoneX ? 44 : 0) : 0;\n    }\n    case 'vertical':\n    case 'top': {\n      return statusBarHeight(isLandscape);\n    }\n    case 'bottom': {\n      if (isIPhoneX) {\n        return isLandscape ? 24 : 34;\n      }\n\n      if (isNewIPadPro) {\n        return 20;\n      }\n\n      return 0;\n    }\n  }\n}\n\nexport function getStatusBarHeight(isLandscape) {\n  return statusBarHeight(isLandscape);\n}\n\nconst SafeAreaView = withOrientation(SafeView);\n\nexport default SafeAreaView;\n\nexport const withSafeArea = function(forceInset = {}) {\n  return WrappedComponent => {\n    class withSafeArea extends Component {\n      render() {\n        return (\n          <SafeAreaView style={{ flex: 1 }} forceInset={forceInset}>\n            <WrappedComponent {...this.props} />\n          </SafeAreaView>\n        );\n      }\n    }\n\n    return hoistStatics(withSafeArea, WrappedComponent);\n  };\n};\n"]}