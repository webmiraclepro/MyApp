{"version":3,"sources":["TransitionView.js"],"names":["_uniqueBaseId","_uuidCount","_zIndex","Transition","props","context","setViewRef","ref","_viewRef","_name","_animatedComponent","nextProps","route","register","shared","appear","disappear","delay","zIndex","anchor","animated","inline","_route","TransitionItem","_getName","undefined","_isMounted","unregister","name","children","innerRef","element","React","Children","only","_outerAnimatedComponent","visibilityStyle","getVisibilityStyle","transitionStyle","getTransitionStyle","key","createElement","type","component","nativeStyles","styles","transition","nativeCached","cached","log","logPrefix","getTransitionProgress","getIndex","getIsAnchored","getIsPartOfSharedTransition","getIsPartOfTransition","getRoutes","getItemByNameAndRoute","getDirectionForRoute","getItemDelayInfo","progress","index","isPartOfTransition","item","routeDirection","delayInfo","delayCount","delayIndex","length","inputRange","Constants","OP","outputRange","isPartOfSharedTransition","isAnchored","visibilityProgress","interpolate","opacity","Component","contextTypes","PropTypes","func","string","getDirection","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, findNodeHandle } from 'react-native';\n\nimport TransitionItem from './TransitionItem';\nimport * as Constants from './TransitionConstants';\nimport { createAnimatedWrapper, createAnimated } from './Utils';\nimport { getCalculatedTransitionStyle } from './Transitions/getTransitionElements';\n\nconst _uniqueBaseId: string = 'tcid';\nlet _uuidCount: number = 0;\nlet _zIndex = 1;\n\ntype TransitionProps = {\n  name: string,\n  appear: ?boolean,\n  disappear: ?boolean,\n  shared: ?string,\n  delay: ?boolean,\n  animated: ?string,\n  anchor: ?string,\n  innerRef: ?any,\n  children: Array<any>,\n  zIndex: Number,\n  inline: ?boolean,\n}\n\nclass Transition extends React.Component<TransitionProps> {\n  static contextTypes = {\n    register: PropTypes.func,\n    unregister: PropTypes.func,\n    route: PropTypes.string,\n    getTransitionProgress: PropTypes.func,\n    getDirectionForRoute: PropTypes.func,\n    getDirection: PropTypes.func,\n    getIndex: PropTypes.func,\n    getIsPartOfSharedTransition: PropTypes.func,\n    getIsPartOfTransition: PropTypes.func,\n    getIsAnchored: PropTypes.func,\n    getItemByNameAndRoute: PropTypes.func,\n    getRoutes: PropTypes.func,\n    getItemDelayInfo: PropTypes.func,\n  }\n\n  constructor(props: TransitionProps, context: any) {\n    super(props, context);\n    this._name = `${_uniqueBaseId}-${_uuidCount++}`;\n    this._animatedComponent = null;\n  }\n\n  _name: string\n\n  _route: string\n\n  _isMounted: boolean;\n\n  _viewRef: any;\n\n  _animatedComponent: any;\n\n  _outerAnimatedComponent: any;\n\n  shouldComponentUpdate(nextProps) {\n    return (this.props !== nextProps);\n  }\n\n  componentWillMount() {\n    const { route, register } = this.context;\n    const { shared, appear, disappear, delay, zIndex, anchor,\n      animated, inline = false } = this.props;\n    if (register) {\n      this._route = route;\n      register(new TransitionItem(\n        this._getName(),\n        route,\n        this,\n        shared !== undefined,\n        appear,\n        disappear,\n        delay !== undefined,\n        zIndex || _zIndex++,\n        anchor,\n        animated,\n        inline,\n      ));\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    const { unregister } = this.context;\n    if (unregister) {\n      unregister(this._getName(), this._route);\n    }\n  }\n\n  getNodeHandle(): number {\n    return findNodeHandle(this._viewRef);\n  }\n\n  getViewRef(): any {\n    return this._viewRef;\n  }\n\n  _getName(): string {\n    const { shared, name } = this.props;\n    if (shared) { return shared; }\n    if (name) { return name; }\n    return this._name;\n  }\n\n  render() {\n    const { children, innerRef } = this.props;\n\n    let element = React.Children.only(children);\n    if (!element) { return null; }\n\n    if (!this._animatedComponent) { this._animatedComponent = createAnimated(); }\n    if (!this._outerAnimatedComponent) { this._outerAnimatedComponent = createAnimated(); }\n\n    const visibilityStyle = this.getVisibilityStyle();\n    const transitionStyle = this.getTransitionStyle();\n    const key = `${this._getName()}-${this._route}`;\n\n    element = React.createElement(element.type, {\n      ...element.props,\n      key,\n      ref: this.setViewRef,\n    });\n\n    return createAnimatedWrapper({\n      component: element,\n      nativeStyles: [visibilityStyle, transitionStyle, styles.transition],\n      nativeCached: this._outerAnimatedComponent,\n      cached: this._animatedComponent,\n      innerRef,\n      log: true,\n      logPrefix: `TV ${this._getName()}/${this._route}`,\n    });\n  }\n\n  setViewRef = (ref: any) => {\n    this._viewRef = ref;\n  }\n\n  getTransitionStyle() {\n    const { inline = false } = this.props;\n    if (!inline) return {};\n\n    const { getTransitionProgress, getIndex, getIsAnchored,\n      getIsPartOfSharedTransition, getIsPartOfTransition, getRoutes,\n      getItemByNameAndRoute, getDirectionForRoute, getItemDelayInfo } = this.context;\n    if (!getTransitionProgress\n      || !getIndex\n      || !getIsAnchored\n      || !getIsPartOfSharedTransition\n      || !getIsPartOfTransition\n      || !getItemByNameAndRoute\n      || !getDirectionForRoute\n      || !getItemDelayInfo\n      || !getRoutes) return {};\n\n    const progress = getTransitionProgress();\n    const index = getIndex();\n    if (!progress || index === undefined) return { };\n\n    const isPartOfTransition = getIsPartOfTransition(this._getName(), this._route);\n    if (isPartOfTransition) {\n      const item = getItemByNameAndRoute(this._getName(), this._route);\n      const routeDirection = getDirectionForRoute(this._getName(), this._route);\n      const delayInfo = getItemDelayInfo(item.name, item.route);\n      const transitionStyle = getCalculatedTransitionStyle(\n        item,\n        delayInfo.delayCount,\n        delayInfo.delayIndex,\n        index,\n        routeDirection,\n        progress,\n        getRoutes().length === 1,\n      );\n      return transitionStyle;\n    }\n    return {};\n  }\n\n  getVisibilityStyle() {\n    const { inline = false } = this.props;\n    const { getTransitionProgress, getIndex, getIsAnchored,\n      getIsPartOfSharedTransition, getIsPartOfTransition,\n      getItemByNameAndRoute, getDirectionForRoute } = this.context;\n    if (!getTransitionProgress || !getIndex || !getIsAnchored\n      || !getIsPartOfSharedTransition || !getIsPartOfTransition\n      || !getItemByNameAndRoute || !getDirectionForRoute) return {};\n\n    const progress = getTransitionProgress();\n    const index = getIndex();\n    if (!progress || index === undefined) return { };\n\n    const inputRange = [index - 1, (index - 1) + Constants.OP, index - Constants.OP, index];\n    const outputRange = [1, 0, 0, 1];\n\n    const isPartOfSharedTransition = getIsPartOfSharedTransition(this._getName(), this._route);\n    const isPartOfTransition = getIsPartOfTransition(this._getName(), this._route);\n    const isAnchored = getIsAnchored(this._getName(), this._route);\n    const visibilityProgress = progress.interpolate({ inputRange, outputRange });\n\n    if (isPartOfSharedTransition\n      || (isPartOfTransition && !inline)\n      || isAnchored) {\n      return { opacity: visibilityProgress };\n    }\n    return {};\n  }\n}\n\nconst styles = StyleSheet.create({\n  transition: {\n    // backgroundColor: '#0000EF22',\n    // borderColor: '#FF0000',\n    // borderWidth: 1,\n  },\n});\n\nexport default Transition;\n"]}