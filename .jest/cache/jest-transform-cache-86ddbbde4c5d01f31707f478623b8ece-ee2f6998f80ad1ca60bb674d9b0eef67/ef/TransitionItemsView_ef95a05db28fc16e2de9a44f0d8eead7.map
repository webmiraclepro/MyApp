{"version":3,"sources":["TransitionItemsView.js"],"names":["TransitionItemsView","props","_shouldRunStartAnimation","getDirectionForRoute","name","route","state","fromRoute","toRoute","RouteDirection","unknown","to","from","getTransitionProgress","useNative","_transitionProgress","_nonNativeTransitionProgress","Animated","Value","addListener","event","value","useNativeDriver","getRoutes","filter","r","getIsAnchored","item","_transitionItems","getItemByNameAndRoute","sharedElements","getSharedElements","find","p","fromItem","anchor","toItem","getItemDelayInfo","transitionElements","getItems","itm","shared","delay","delayCount","length","delayFactor","delayIndex","i","getIsPartOfSharedTransition","pair","getDirection","direction","getIndex","index","getIsPartOfTransition","appear","disappear","getTransitionElements","o","_inUpdate","_isMounted","_viewRef","NavigationDirection","Unknown","TransitionItems","progress","setValue","_interactionDonePromise","Promise","resolve","_interactionDonePromiseDone","nextProps","updateFromProps","prevProps","Number","MIN_SAFE_INTEGER","forward","back","setState","style","children","styles","container","ref","StyleSheet","absoluteFillObject","nodeHandle","viewMetrics","promise","UIManager","measureInWindow","x","y","width","height","promises","getViewMetrics","push","measureItem","anchors","n","all","getNodeHandle","updateMetrics","measureAndUpdateFunc","measureItems","metrics","forEach","forceUpdate","prevState","onLayout","_runStartAnimation","bind","setTimeout","numberOfTransitions","getTransitionConfig","context","navigation","transitionSpec","timing","duration","easing","Easing","inOut","poly","isInteraction","animations","toValue","parallel","start","te","InteractionManager","runAfterInteractions","register","add","unregister","remove","React","Component","childContextTypes","PropTypes","func","contextTypes","create","flex","overflow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  UIManager,\n  Easing,\n  InteractionManager,\n  Animated,\n  findNodeHandle,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { ScreenContainer } from 'react-native-screens';\n\nimport { Metrics, NavigationDirection, RouteDirection } from './Types';\nimport TransitionItem from './TransitionItem';\nimport TransitionItems from './TransitionItems';\nimport TransitionOverlayView from './TransitionOverlayView';\n\ntype State = {\n  fromRoute: ?string,\n  toRoute: ?string,\n  direction: NavigationDirection,\n  index: number,\n  sharedElements: ?Array<any>,\n  transitionElements: ?Array<TransitionItem>\n}\n\ntype Props = {\n  children: Array<any>,\n  progress: Animated.Value,\n  fromRoute: string,\n  toRoute: string,\n  index: ?number,\n  navigation: any,\n  style: StyleSheet.Styles,\n  onLayout: (evt: any) => void,\n}\n\nexport default class TransitionItemsView extends React.Component<\n  Props, State> {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this._viewRef = null;\n\n    this.state = {\n      toRoute: null,\n      fromRoute: null,\n      direction: NavigationDirection.Unknown,\n      sharedElements: null,\n      transitionElements: null,\n      index: -1,\n    };\n\n    this._transitionItems = new TransitionItems();\n    this._transitionProgress = props.progress;\n    this._transitionProgress.setValue(-1); // Reset to handle first transition\n    // this._transitionProgress.addListener(console.log);\n\n    this._interactionDonePromise = new Promise(\n      resolve => this._interactionDonePromiseDone = resolve,\n    );\n  }\n\n  _viewRef: ?View;\n\n  _viewMetrics: Metrics;\n\n  _transitionItems: TransitionItems;\n\n  _isMounted: boolean;\n\n  _transitionProgress: Animated.Value;\n\n  _nonNativeTransitionProgress: Animated.Value;\n\n  _interactionDonePromise: Promise;\n\n  _interactionDonePromiseDone: Function;\n\n  _shouldRunStartAnimation: boolean = true;\n\n  componentWillReceiveProps(nextProps) {\n    this.updateFromProps(nextProps, this.props);\n  }\n\n  updateFromProps(props, prevProps) {\n    if (!this._isMounted) return;\n\n    const { fromRoute, toRoute } = props;\n    const direction = props.index >= (prevProps ? prevProps.index : Number.MIN_SAFE_INTEGER)\n      ? NavigationDirection.forward : NavigationDirection.back;\n\n    const index = prevProps ? props.index : 0;\n\n    if (toRoute !== this.state.toRoute\n      || fromRoute !== this.state.fromRoute\n      || index !== this.state.index\n      || direction !== this.state.direction) {\n      this.setState({\n        toRoute,\n        fromRoute,\n        direction,\n        index,\n      });\n    }\n  }\n\n  render() {\n    const { style, children } = this.props;\n    const { direction, fromRoute, toRoute, index, sharedElements, transitionElements } = this.state;\n    return (\n      <View\n        {...this.props}\n        style={[styles.container, style]}\n        ref={(ref) => this._viewRef = ref}\n        collapsable={false}\n      >\n        <ScreenContainer style={{ ...StyleSheet.absoluteFillObject }}>\n          {children}\n        </ScreenContainer>\n        <TransitionOverlayView\n          direction={direction}\n          fromRoute={fromRoute}\n          toRoute={toRoute}\n          index={index}\n          sharedElements={sharedElements}\n          transitionElements={transitionElements}\n        />\n      </View>\n    );\n  }\n\n  getDirectionForRoute = (name: string, route: string): RouteDirection => {\n    const { fromRoute, toRoute } = this.state;\n    if (!fromRoute && !toRoute) { return RouteDirection.unknown; }\n    if (!fromRoute) { return RouteDirection.to; } // First screen, always direction to\n    if (route === fromRoute) {\n      return RouteDirection.from;\n    } if (route === toRoute) {\n      return RouteDirection.to;\n    }\n    return RouteDirection.unknown;\n  }\n\n  getTransitionProgress = (useNative = true) => {\n    if (useNative) return this._transitionProgress;\n\n    if (!this._nonNativeTransitionProgress) {\n      this._nonNativeTransitionProgress = new Animated.Value(-1);\n      this._transitionProgress.addListener(Animated.event([{\n        value: this._nonNativeTransitionProgress }],\n      { useNativeDriver: false }));\n    }\n    return this._nonNativeTransitionProgress;\n  }\n\n  getRoutes = () => {\n    const { fromRoute, toRoute } = this.state;\n    return [fromRoute, toRoute].filter(r => r !== null);\n  }\n\n  getIsAnchored = (name: string, route: string) => {\n    const item = this._transitionItems.getItemByNameAndRoute(name, route);\n    if (!item) return false;\n\n    const { fromRoute, toRoute } = this.state;\n    const sharedElements = this._transitionItems.getSharedElements(fromRoute, toRoute);\n    if (sharedElements\n      && (sharedElements.find(p => p.fromItem.name === item.anchor && p.fromItem.route === route))\n      || sharedElements.find(p => p.toItem.name === item.anchor && p.toItem.route === route)) {\n      return true;\n    }\n    return false;\n  }\n\n  getItemByNameAndRoute = (\n    name: string, route: string,\n  ) => this._transitionItems.getItemByNameAndRoute(name, route)\n\n  getItemDelayInfo = (name: string, route: string) => {\n    const { fromRoute, toRoute } = this.state;\n    const transitionElements = this._transitionItems\n      .getItems()\n      .filter(itm => itm.route === route && !itm.shared && itm.delay);\n\n    const delayCount = transitionElements.length + 1;\n    let delayFactor = 0;\n    let delayIndex = 0;\n    if (fromRoute === route) {\n      delayFactor = 1;\n      delayIndex = 0;\n    } else if (toRoute === route) {\n      delayFactor = -1;\n      delayIndex = delayCount - 1;\n    }\n\n    for (let i = 0; i < transitionElements.length; i++) {\n      delayIndex += delayFactor;\n      if (transitionElements[i].name === name\n        && transitionElements[i].route === route) {\n        break;\n      }\n    }\n\n    return { delayCount, delayIndex };\n  }\n\n  getIsPartOfSharedTransition = (name: string, route: string) => {\n    const item = this._transitionItems.getItemByNameAndRoute(name, route);\n    if (!item || !item.shared) return false;\n\n    const { fromRoute, toRoute } = this.state;\n    const sharedElements = this._transitionItems.getSharedElements(fromRoute, toRoute);\n\n    if (sharedElements.find(pair => (pair.fromItem.name === item.name\n      && pair.fromItem.route === item.route)\n      || (pair.toItem.name === item.name && pair.toItem.route === item.route))) {\n      return true;\n    }\n    return false;\n  }\n\n  getDirection = () => {\n    const { direction } = this.state;\n    return direction;\n  }\n\n  getIndex = () => {\n    const { index } = this.state;\n    return index;\n  }\n\n  getIsPartOfTransition = (name: string, route: string) => {\n    const item = this._transitionItems.getItemByNameAndRoute(name, route);\n    if (!item || !(item.appear || item.disappear)) return false;\n\n    const { fromRoute, toRoute } = this.state;\n    const transitionElements = this._transitionItems.getTransitionElements(fromRoute, toRoute);\n\n    if (transitionElements.find(o => item.name === o.name && item.route === o.route)) {\n      return true;\n    }\n    return false;\n  }\n\n  async getViewMetrics():Metrics {\n    const nodeHandle = findNodeHandle(this._viewRef);\n    let viewMetrics: Metrics;\n    if (!nodeHandle) return viewMetrics;\n\n    const promise = new Promise(resolve => {\n      UIManager.measureInWindow(nodeHandle, (x, y, width, height) => {\n        viewMetrics = { x, y, width, height };\n        resolve();\n      });\n    });\n    await promise;\n    return viewMetrics;\n  }\n\n  async measureItems(\n    sharedElements: Map<TransitionItem, TransitionItem>,\n    transitionElements: Array<TransitionItem>,\n  ) {\n    const promises = [];\n    const viewMetrics = await this.getViewMetrics();\n    if (sharedElements) {\n      for (let i = 0; i < sharedElements.length; i++) {\n        const pair = sharedElements[i];\n        promises.push(this.measureItem(viewMetrics, pair.fromItem));\n        promises.push(this.measureItem(viewMetrics, pair.toItem));\n        if (pair.fromItem && pair.fromItem.anchors) {\n          for (let n = 0; n < pair.fromItem.anchors.length; n++) {\n            promises.push(this.measureItem(viewMetrics, pair.fromItem.anchors[n]));\n          }\n        }\n        if (pair.toItem && pair.toItem.anchors) {\n          for (let n = 0; n < pair.toItem.anchors.length; n++) {\n            promises.push(this.measureItem(viewMetrics, pair.toItem.anchors[n]));\n          }\n        }\n      }\n    }\n\n    if (transitionElements) {\n      for (let i = 0; i < transitionElements.length; i++) {\n        promises.push(this.measureItem(viewMetrics, transitionElements[i]));\n      }\n    }\n\n    if (promises.length > 0) await Promise.all(promises);\n  }\n\n  async measureItem(viewMetrics: Metrics, item: TransitionItem) {\n    const nodeHandle = item.getNodeHandle();\n    if (!nodeHandle) return;\n\n    await new Promise(resolve => {\n      UIManager.measureInWindow(nodeHandle, (x, y, width, height) => {\n        item.updateMetrics(viewMetrics, { x, y, width, height });\n        resolve();\n      });\n    });\n  }\n\n  _inUpdate: boolean = false;\n\n  componentDidUpdate() {\n    if (this._inUpdate) return;\n    const { fromRoute, toRoute } = this.state;\n    if (!fromRoute && !toRoute) return;\n\n    this._inUpdate = true;\n\n    // Wait a little bit to give the layout system some time to reconcile\n    let measureAndUpdateFunc = async () => {\n      const sharedElements = this._transitionItems.getSharedElements(fromRoute, toRoute);\n      const transitionElements = this._transitionItems.getTransitionElements(fromRoute, toRoute);\n\n      await this._interactionDonePromise;\n      await this.measureItems(sharedElements, transitionElements);\n\n      if (!sharedElements.find(p => !p.fromItem.metrics || !p.toItem.metrics)\n        && !transitionElements.find(i => !i.metrics)) {\n        // Update style based on calculation by re-rendering all transition elements.\n        // Ref, https://github.com/fram-x/FluidTransitions/issues/8\n        this._transitionItems.getItems().forEach(item => item.forceUpdate());\n\n        // HACK: Setting state in componentDidUpdate is not nice - but\n        // this is the only way we can notify the transitioner that we are\n        // ready to move along with the transition and we're trying to be nice\n        // by waiting a few milliseconds\n        this.setState((prevState) => ({\n          ...prevState,\n          sharedElements,\n          transitionElements,\n        }), () => {\n          const { onLayout } = this.props;\n          if (onLayout) onLayout();\n          this._runStartAnimation(transitionElements.length);\n          this._inUpdate = false;\n        });\n      }\n    };\n\n    measureAndUpdateFunc = measureAndUpdateFunc.bind(this);\n    setTimeout(measureAndUpdateFunc, 10);\n  }\n\n  async _runStartAnimation(numberOfTransitions: number) {\n    if (!this._shouldRunStartAnimation) { return; }\n\n    this._shouldRunStartAnimation = false;\n    const { getTransitionConfig } = this.context;\n    const { toRoute, navigation, index } = this.props;\n\n    if (index > 0) {\n      this._transitionProgress.setValue(index - 1);\n    }\n\n    const transitionSpec = getTransitionConfig\n      ? getTransitionConfig(toRoute, navigation) : {\n        timing: Animated.timing,\n        duration: 650,\n        easing: Easing.inOut(Easing.poly(4)),\n        isInteraction: true,\n        useNativeDriver: true,\n      };\n\n    const { timing } = transitionSpec;\n    delete transitionSpec.timing;\n    const animations = [\n      timing(this._transitionProgress, {\n        ...transitionSpec,\n        duration: numberOfTransitions === 0 ? 25 : transitionSpec.duration,\n        toValue: index,\n      }),\n    ];\n\n    Animated.parallel(animations).start();\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateFromProps({ ...this.props, index: -1 });\n    // check for transition elements - we don't need to wait for transitions\n    // if we don't have any appearing elements\n    const { fromRoute, toRoute } = this.props;\n    const te = this._transitionItems.getTransitionElements(fromRoute, toRoute);\n    if (te.length > 0) {\n      InteractionManager.runAfterInteractions(this._interactionDonePromiseDone);\n    } else {\n      this._interactionDonePromiseDone();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  static childContextTypes = {\n    register: PropTypes.func,\n    unregister: PropTypes.func,\n    getTransitionProgress: PropTypes.func,\n    getDirectionForRoute: PropTypes.func,\n    getDirection: PropTypes.func,\n    getIndex: PropTypes.func,\n    getIsPartOfSharedTransition: PropTypes.func,\n    getIsPartOfTransition: PropTypes.func,\n    getRoutes: PropTypes.func,\n    getIsAnchored: PropTypes.func,\n    getItemByNameAndRoute: PropTypes.func,\n    getItemDelayInfo: PropTypes.func,\n  }\n\n  static contextTypes = {\n    getTransitionConfig: PropTypes.func,\n  }\n\n  getChildContext() {\n    return {\n      register: (item) => this._transitionItems.add(item),\n      unregister: (name, route) => this._transitionItems.remove(name, route),\n      getTransitionProgress: this.getTransitionProgress,\n      getDirectionForRoute: this.getDirectionForRoute,\n      getIndex: () => this.getIndex(),\n      getDirection: () => (this.getDirection() || NavigationDirection.unknown),\n      getIsPartOfSharedTransition: this.getIsPartOfSharedTransition,\n      getIsPartOfTransition: this.getIsPartOfTransition,\n      getIsAnchored: this.getIsAnchored,\n      getRoutes: this.getRoutes,\n      getItemByNameAndRoute: this.getItemByNameAndRoute,\n      getItemDelayInfo: this.getItemDelayInfo,\n    };\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]}