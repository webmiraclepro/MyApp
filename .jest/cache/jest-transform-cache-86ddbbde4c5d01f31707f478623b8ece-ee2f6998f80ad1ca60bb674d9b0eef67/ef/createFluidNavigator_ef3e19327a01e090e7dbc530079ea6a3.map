{"version":3,"sources":["createFluidNavigator.js"],"names":["routeConfigMap","stackConfig","initialRouteName","initialRouteParams","paths","mode","transitionConfig","defaultNavigationOptions","style","stackRouterConfig","reactNavigationDefaultNavigationOptions","getCustomActionCreators","FluidNavigationView","props","navigation","screenProps","descriptors","onTransitionStart","onTransitionEnd","transition","lastTransition","state","isTransitioning","dispatch","StackActions","completeTransition","key","toChildKey","routes","index","React","Component","router"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAQA;;eAEe,kBAACA,cAAD,EAAsC;AAAA,MAArBC,WAAqB,uEAAP,EAAO;AAAA,MAEjDC,gBAFiD,GAS/CD,WAT+C,CAEjDC,gBAFiD;AAAA,MAGjDC,kBAHiD,GAS/CF,WAT+C,CAGjDE,kBAHiD;AAAA,MAIjDC,KAJiD,GAS/CH,WAT+C,CAIjDG,KAJiD;AAAA,MAKjDC,IALiD,GAS/CJ,WAT+C,CAKjDI,IALiD;AAAA,MAMjDC,gBANiD,GAS/CL,WAT+C,CAMjDK,gBANiD;AAAA,MAOjDC,wBAPiD,GAS/CN,WAT+C,CAOjDM,wBAPiD;AAAA,MAQjDC,KARiD,GAS/CP,WAT+C,CAQjDO,KARiD;AAWnD,MAAMC,iBAAiB,mCAClBC,yCADkB;AAErBR,IAAAA,gBAAgB,EAAhBA,gBAFqB;AAGrBC,IAAAA,kBAAkB,EAAlBA,kBAHqB;AAIrBC,IAAAA,KAAK,EAALA,KAJqB;AAKrBG,IAAAA,wBAAwB,EAAxBA,wBALqB;AAMrBI,IAAAA,uBAAuB,EAAvBA;AANqB,IAAvB;;AAXmD,MAoB7CC,mBApB6C;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAqBxC;AAAA,0BAEe,KAAKC,KAFpB;AAAA,YACCC,UADD,eACCA,UADD;AAAA,YACaC,WADb,eACaA,WADb;AAAA,YAC0BC,WAD1B,eAC0BA,WAD1B;AAAA,YACuCC,iBADvC,eACuCA,iBADvC;AAAA,YAELC,gBAFK,eAELA,eAFK;AAIP,eACE,6BAAC,0BAAD;AACE,UAAA,IAAI,EAAEb,IADR;AAEE,UAAA,KAAK,EAAEG,KAFT;AAGE,UAAA,UAAU,EAAEM,UAHd;AAIE,UAAA,WAAW,EAAEC,WAJf;AAKE,UAAA,WAAW,EAAEC,WALf;AAME,UAAA,gBAAgB,EAAEV,gBANpB;AAOE,UAAA,iBAAiB,EAAEW,iBAPrB;AAQE,UAAA,eAAe,EAAE,yBAACE,UAAD,EAAaC,cAAb,EAAgC;AAC/C,gBAAID,UAAU,CAACL,UAAX,CAAsBO,KAAtB,CAA4BC,eAAhC,EAAiD;AAC/CR,cAAAA,UAAU,CAACS,QAAX,CACEC,8BAAaC,kBAAb,CAAgC;AAC9BC,gBAAAA,GAAG,EAAEZ,UAAU,CAACO,KAAX,CAAiBK,GADQ;AAE9BC,gBAAAA,UAAU,EAAEb,UAAU,CAACO,KAAX,CAAiBO,MAAjB,CAAwBd,UAAU,CAACO,KAAX,CAAiBQ,KAAzC,EAAgDH;AAF9B,eAAhC,CADF;AAMD;;AACD,gBAAIR,gBAAJ,EAAqBA,gBAAe,CAACC,UAAD,EAAaC,cAAb,CAAf;AACtB;AAlBH,UADF;AAsBD;AA/CgD;AAAA;AAAA,IAoBjBU,eAAMC,SApBW;;AAkDnD,MAAMC,MAAM,GAAG,kCAAYhC,cAAZ,EAA4BS,iBAA5B,CAAf;AACA,SAAO,sCAAgBG,mBAAhB,EAAqCoB,MAArC,EAA6C/B,WAA7C,CAAP;AACD,C","sourcesContent":["import React from 'react';\nimport {\n  StackRouter,\n  createNavigator,\n  StackActions,\n  getCustomActionCreators,\n  defaultNavigationOptions as reactNavigationDefaultNavigationOptions,\n} from 'react-navigation';\n\nimport FluidTransitioner from './FluidTransitioner';\n\nexport default (routeConfigMap, stackConfig = {}) => {\n  const {\n    initialRouteName,\n    initialRouteParams,\n    paths,\n    mode,\n    transitionConfig,\n    defaultNavigationOptions,\n    style,\n  } = stackConfig;\n\n  const stackRouterConfig = {\n    ...reactNavigationDefaultNavigationOptions,\n    initialRouteName,\n    initialRouteParams,\n    paths,\n    defaultNavigationOptions,\n    getCustomActionCreators,\n  };\n\n  class FluidNavigationView extends React.Component {\n    render() {\n      const { navigation, screenProps, descriptors, onTransitionStart,\n        onTransitionEnd } = this.props;\n\n      return (\n        <FluidTransitioner\n          mode={mode}\n          style={style}\n          navigation={navigation}\n          screenProps={screenProps}\n          descriptors={descriptors}\n          transitionConfig={transitionConfig}\n          onTransitionStart={onTransitionStart}\n          onTransitionEnd={(transition, lastTransition) => {\n            if (transition.navigation.state.isTransitioning) {\n              navigation.dispatch(\n                StackActions.completeTransition({\n                  key: navigation.state.key,\n                  toChildKey: navigation.state.routes[navigation.state.index].key\n                }),\n              );\n            }\n            if (onTransitionEnd) onTransitionEnd(transition, lastTransition);\n          }}\n        />\n      );\n    }\n  }\n\n  const router = StackRouter(routeConfigMap, stackRouterConfig);\n  return createNavigator(FluidNavigationView, router, stackConfig);\n};\n"]}